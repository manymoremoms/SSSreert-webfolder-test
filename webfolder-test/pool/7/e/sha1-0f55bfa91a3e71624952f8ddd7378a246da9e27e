class AutoHideMenu{
     constructor(menuId,showMenuCallback,hiddenMenuCallback) 
     {
       this.menu = document.getElementById(menuId);  
       this.timer = null;
       this.shortDelay = 3000; // 默认3秒
       this.resetDelay = 10000; // 默认10秒
       this.longDelay = 120000;
       this.showFlag = false;
       this.showMenuCallback = showMenuCallback;
       this.hiddenMenuCallback = hiddenMenuCallback;
       if (!this.menu) 
       {
         throw new Error('菜单或触发器元素未找到');
       }
     }
         
     showMenu() 
     {
        if (this.showMenuCallback) this.showMenuCallback();
        this.menu.classList.remove('hide');
        this.menu.classList.add('show');
        this.resetTimer(this.shortDelay);
        this.showFlag = true;       
     }
         
     hideMenu() 
     {
       this.menu.classList.remove('show');
       this.menu.classList.add('hide');
       clearTimeout(this.timer);
       this.showFlag = false;
       if (this.hiddenMenuCallback) this.hiddenMenuCallback();
     }
         
     resetTimer(displayTime)
     {
       clearTimeout(this.timer);
       this.timer = setTimeout(() => this.hideMenu(), displayTime);
     }
}

class ListNode {
  constructor(value,state) {
    this.value = value;    // 节点值
    this.state = state;
    this.parent = null;    // 父节点
    this.firstChild = null; // 第一个子节点
    this.leftSibling = null; // 左兄弟节点
    this.rightSibling = null; // 右兄弟节点
  }

  // 添加子节点
  addChild(value,state) 
  {
    const newChild = new ListNode(value,state);
    newChild.parent = this;
    
    if (!this.firstChild) 
    {
      this.firstChild = newChild;
    } 
    else 
    {
      let lastChild = this.firstChild;
      while (lastChild.rightSibling) 
      {
        lastChild = lastChild.rightSibling;
      }
      newChild.leftSibling = lastChild;
      lastChild.rightSibling = newChild;
    }
    
    return newChild;
  }
  
  setState(state)
  {
    this.state = state; 
  }

  addRightSibling(value,state) 
  {
    if (!this.parent) return null; // 根节点没有兄弟
    
    const newSibling = new ListNode(value,state);
    newSibling.parent = this.parent;
    
    // 调整兄弟指针
    newSibling.leftSibling = this;
    newSibling.rightSibling = this.rightSibling;
    
    if (this.rightSibling) 
    {
      this.rightSibling.leftSibling = newSibling;
    }
    this.rightSibling = newSibling;
    
    return newSibling;
  }

  // 获取前一个兄弟节点
  getPreviousSibling() {
    return this.leftSibling;
  }

  // 获取下一个兄弟节点
  getNextSibling() {
    return this.rightSibling;
  }

  // 获取所有子节点
  getChildren() {
    const children = [];
    let child = this.firstChild;
    while (child) {
      children.push(child);
      child = child.rightSibling;
    }
    return children;
  }
    getNodeLevel(targetValue) {
        // 辅助函数：递归计算层数
        const findLevel = (node, currentLevel) => {
          if (!node) return -1;
          
          // 找到目标节点
          if (node.value === targetValue) {
            return currentLevel;
          }
          
          // 递归检查子节点
          let child = node.firstChild;
          while (child) {
            const foundLevel = findLevel(child, currentLevel + 1);
            if (foundLevel !== -1) return foundLevel;
            child = child.rightSibling;
          }
          
          return -1;
        };
        
        return findLevel(this, 1); // 从当前节点开始查找（通常用root调用）
    }
    getLastRightSibling() 
    {
        let currentNode = this;
        
        // 遍历直到没有右兄弟节点
        while (currentNode.rightSibling) {
          currentNode = currentNode.rightSibling;
        }
        
        return currentNode; // 返回最后一个右兄弟或自身
    }
    
    getLastLeftSibling()
    {
        let currentNode = this;
        
        // 遍历直到没有右兄弟节点
        while (currentNode.leftSibling) {
          currentNode = currentNode.leftSibling;
        }
        
        return currentNode; // 返回最后一个右兄弟或自身
    }
    
    getRightSibling()
    {
        let currentNode = this;
        
        if (currentNode.rightSibling)
            currentNode = currentNode.rightSibling;
        else
            currentNode = currentNode.getLastLeftSibling()
            
        
        return currentNode; 
    }
    getLeftSibling()
    {
        let currentNode = this;
        
        if (currentNode.leftSibling)
            currentNode = currentNode.leftSibling;
        else
            currentNode = currentNode.getLastRightSibling()            
        
        return currentNode; 
    }
  // 深度优先遍历
  traverse(callback, order = 'pre') 
  {
    if (order === 'pre') callback(this.value);
    
    let child = this.firstChild;
    while (child) 
    {
      child.traverse(callback, order);
      child = child.rightSibling;
    }
    
    if (order === 'post') callback(this.value);
  }

  // 查找节点
  find(value) {
    if (this.value === value) return this;
    
    let child = this.firstChild;
    while (child) 
    {
      const found = child.find(value);
      if (found) return found;
      child = child.rightSibling;
    }
    
    return null;
  }
  destroy() {
      // 1. 递归销毁所有子节点
      let child = this.firstChild;
      while (child) {
        const nextChild = child.rightSibling;
        child.destroy(); // 递归销毁
        child = nextChild;
      }
  
      // 2. 断开与兄弟节点的链接
      if (this.leftSibling) {
        this.leftSibling.rightSibling = this.rightSibling;
      }
      if (this.rightSibling) {
        this.rightSibling.leftSibling = this.leftSibling;
      }
  
      // 3. 如果当前节点是父节点的firstChild，需要更新父节点指针
      if (this.parent && this.parent.firstChild === this) {
        this.parent.firstChild = this.rightSibling;
      }
  
      // 4. 清空所有引用
      this.parent = null;
      this.firstChild = null;
      this.leftSibling = null;
      this.rightSibling = null;
      this.value = null;
      this.state = null;
    }
}

class KEY_STATE_E {
    static KEY_STATE_INIT = 0;
    static KEY_STATE_WOBBLE = 1;
    static KEY_STATE_PRESS = 2;
    static KEY_STATE_LONG = 3;
    static KEY_STATE_CONTIUNE = 4;
    static KEY_STATE_RELEASE = 5;
}
        
class KEY_VALUE_E {
    static KEY_NULL = 0;
    static KEY_DOWNN = 1;
    static KEY_LONG = 2;
    static KEY_CONTINUE = 3;
    static KEY_UPP = 4;
}
        
const KEY_DEBOUNCE_PERIOD = 20;    // ms
const KEY_LONG_PERIOD = 1000;       // ms
const KEY_COUTINUE_PERIOD = 100;    // ms
        
class Button {
    constructor(keyDown_cb, keyLongPress_cb, keyContinue_cb, keyUp_cb) {
        this.keyDown_cb = keyDown_cb;
        this.keyLongPress_cb = keyLongPress_cb;
        this.keyContinue_cb = keyContinue_cb;
        this.keyUp_cb = keyUp_cb;
        
        this.keyValue = null;
        this.keyLastValue = KEY_VALUE_E.KEY_NULL;
        this.eKeyCurState = KEY_STATE_E.KEY_STATE_INIT;
        this.eKeyLastState = KEY_STATE_E.KEY_STATE_INIT;
        this.bStateChangedFlag = false;
        this.downTick = 0;
        this.upTick = 0;
        
        // Start the monitoring loop
        this.monitorInterval = setInterval(() => {
            this.keyScan();
            this.keyHandle();
        }, 10); // 10ms interval (~0.01s)
    }

    setKeyValue(value) {
        this.keyValue = value;
    }

    timeDiffFromNow(nowTime) {
        const now = Date.now();
        return now - nowTime;
    }

    keyScan() {
        const value = this.keyValue;
        this.keyLastValue = KEY_VALUE_E.KEY_NULL;
        
        switch (this.eKeyCurState) {
            case KEY_STATE_E.KEY_STATE_INIT:
                if (value === true) {
                    this.downTick = Date.now();
                    this.bStateChangedFlag = true;
                    this.eKeyCurState = KEY_STATE_E.KEY_STATE_WOBBLE;
                }
                break;
                
            case KEY_STATE_E.KEY_STATE_WOBBLE:
                if (value === true) {
                    if (this.timeDiffFromNow(this.downTick) > KEY_DEBOUNCE_PERIOD) {
                        this.bStateChangedFlag = true;
                        this.eKeyCurState = KEY_STATE_E.KEY_STATE_PRESS;
                    }
                } else {
                    this.bStateChangedFlag = true;
                    this.eKeyCurState = KEY_STATE_E.KEY_STATE_INIT;
                }
                break;
                
            case KEY_STATE_E.KEY_STATE_PRESS:
                if (this.bStateChangedFlag === true) {
                    this.bStateChangedFlag = false;
                    this.keyLastValue = KEY_VALUE_E.KEY_DOWNN;
                }
                if (value === true) {
                    if (this.timeDiffFromNow(this.downTick) > KEY_LONG_PERIOD) {
                        this.bStateChangedFlag = true;
                        this.eKeyCurState = KEY_STATE_E.KEY_STATE_LONG;
                    }
                } else {
                    this.upTick = Date.now();
                    this.bStateChangedFlag = true;
                    this.eKeyCurState = KEY_STATE_E.KEY_STATE_RELEASE;
                }
                break;
                
            case KEY_STATE_E.KEY_STATE_LONG:
                if (this.bStateChangedFlag === true) {
                    this.bStateChangedFlag = false;
                    this.keyLastValue = KEY_VALUE_E.KEY_LONG;
                }
                if (value === true) {
                    if (this.timeDiffFromNow(this.downTick) > KEY_LONG_PERIOD + KEY_COUTINUE_PERIOD) {
                        this.downTick = Date.now();
                        this.bStateChangedFlag = true;
                        this.eKeyCurState = KEY_STATE_E.KEY_STATE_CONTIUNE;
                    }
                } else {
                    this.upTick = Date.now();
                    this.bStateChangedFlag = true;
                    this.eKeyCurState = KEY_STATE_E.KEY_STATE_RELEASE;
                }
                break;
                
            case KEY_STATE_E.KEY_STATE_CONTIUNE:
                if (this.bStateChangedFlag === true) {
                    this.bStateChangedFlag = false;
                    this.keyLastValue = KEY_VALUE_E.KEY_CONTINUE;
                }
                if (value === true) {
                    if (this.timeDiffFromNow(this.downTick) > KEY_COUTINUE_PERIOD) {
                        this.downTick = Date.now();
                        this.bStateChangedFlag = true;
                        this.eKeyCurState = KEY_STATE_E.KEY_STATE_CONTIUNE;
                    }
                } else {
                    this.upTick = Date.now();
                    this.bStateChangedFlag = true;
                    this.eKeyCurState = KEY_STATE_E.KEY_STATE_RELEASE;
                }
                break;
                
            case KEY_STATE_E.KEY_STATE_RELEASE:
                if (this.timeDiffFromNow(this.upTick) > KEY_DEBOUNCE_PERIOD) {
                    if (this.bStateChangedFlag === true) {
                        this.bStateChangedFlag = false;
                        this.keyLastValue = KEY_VALUE_E.KEY_UPP;
                    }
                    this.bStateChangedFlag = true;
                    this.eKeyCurState = KEY_STATE_E.KEY_STATE_INIT;
                } else {
                    if (value === true) {
                        this.eKeyCurState = this.eKeyLastState;
                    }
                }
                break;
        }
        
        this.eKeyLastState = this.eKeyCurState;
    }

    keyHandle() {
        try {
            switch (this.keyLastValue) {
                case KEY_VALUE_E.KEY_DOWNN:
                    if (this.keyDown_cb) this.keyDown_cb();
                    break;
                case KEY_VALUE_E.KEY_LONG:
                    if (this.keyLongPress_cb) this.keyLongPress_cb();
                    break;
                case KEY_VALUE_E.KEY_CONTINUE:
                    if (this.keyContinue_cb) this.keyContinue_cb();
                    break;
                case KEY_VALUE_E.KEY_UPP:
                    if (this.keyUp_cb) this.keyUp_cb();
                    break;
            }
        } catch (e) {
            console.error("Error in button callback:", e);
        }
    }

    // Clean up when done
    destroy() {
        if (this.monitorInterval) {
            clearInterval(this.monitorInterval);
        }
    }
}

function simulateKeyPress(target, key, modifiers = {}) {
  const { ctrlKey = false, shiftKey = false, altKey = false } = modifiers;
  
  const events = [
    new KeyboardEvent('keydown', { key, ctrlKey, shiftKey, altKey, bubbles: true }),
    new KeyboardEvent('keypress', { key, ctrlKey, shiftKey, altKey, bubbles: true }),
    new KeyboardEvent('keyup', { key, ctrlKey, shiftKey, altKey, bubbles: true })
  ];

  events.forEach(event => target.dispatchEvent(event));
}
// 使用示例
// const input = document.querySelector('input');
// simulateKeyPress(input, 'Enter'); // 模拟回车键

function parseDateTime(datetimeStr) {
    // 替换/为-以兼容Date解析
    const date = new Date(datetimeStr.replace(/\//g, '-'));
    const weekdays = ['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    
    if (isNaN(date.getTime())) {
        throw new Error('Invalid datetime string');
    }

    return {
        year: date.getFullYear(),
        month: date.getMonth() + 1, // 月份从0开始
        day: date.getDate(),
        hour: date.getHours(),
        minute: date.getMinutes(),
        second: date.getSeconds(),
        millisecond: date.getMilliseconds(),
        weekday: weekdays[date.getDay()]
    };
}

$(document).ready(function(){
   
    const modeBtn = document.getElementById('modeBtn');
    const downBtn = document.getElementById('downBtn');
    const upBtn = document.getElementById('upBtn');
    const powerBtn = document.getElementById('powerBtn');
    const blackColor = "#000000"
    const yellowColor = "#ff3f05"
    const blueColor = "#00AEEF"
    const whiteColor = "#fefefe"
    const greyColor = "#ccc"
    
    var keyJson = {}
    let currentVolume = 50
    let brightness = 50
    let tvPowerState = 1  //1 tvPowerOn;0 tvPowerOff
    let rebootFlag = 0 
    let automaticOn = 0
    let defaultVolume = 50
    let tempVolume = 50;
    let defaultBrightness = 80
    let tempBrightness = 80;
    let startbackdoorFlag = 0;
    let ScheduleJsonData = {
        "Monday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        },
        "Tuesday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        },
        "Wednesday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        },
        "Thursday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        },
        "Friday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        },
        "Saturday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        },
        "Sunday": {
            "OnTime": {
                "hour": 8,
                "minute": 0
            },
            "OffTime": {
                "hour": 21,
                "minute": 0
            },
            "Active": false
        }
    }
    
    let myMenu = new AutoHideMenu("menu",MenuShowCallback,MenuHiddenCallback);
    let  root;
    let currentMenu;
    
    const buttonMenu = new Button(ButtonMenuKeyPressed,ButtonMenukeyLongPress,ButtonMenuKeyContinue,ButtonMenuKeyReleased);
    const buttonDown = new Button(ButtonDownKeyPressed,ButtonDownkeyLongPress,ButtonDownKeyContinue,ButtonDownKeyReleased);
    const buttonUp = new Button(ButtonUpKeyPressed,ButtonUpkeyLongPress,ButtonUpKeyContinue,ButtonUpKeyReleased);
    const buttonOK = new Button(ButtonOKKeyPressed,ButtonOKkeyLongPress,ButtonOKKeyContinue,ButtonOKKeyReleased);

    let bsMessagePort = new BSMessagePort();
    bsMessagePort.onbsmessage = function(msg){
        parseMessage(msg);
    };
    MenuStructInit();
    myMenu.hideMenu();   
    currentMenu = root.find("VolumeFrameDiv");
    OnLoadMenu()
    OnLoadSchedule()
    OnLoadTimeMenu()
    OnLoadResetMenu()
    scheduleTimerHander()
    rebootTimerHander()
    initHeartbeat();
    
    function initHeartbeat() {
        const HEARTBEAT_INTERVAL = 30000; // 30秒发送一次心跳
        const HEARTBEAT_MESSAGE = { heartbeat: "alive" };
        
        setInterval(() => {
            try {
                bsMessagePort.PostBSMessage(HEARTBEAT_MESSAGE);
                console.log("Heartbeat sent");
            } catch (e) {
                console.error("Heartbeat failed:", e);
            }
        }, HEARTBEAT_INTERVAL);
    }
    
    function scheduleTimerHander()
    {
       const intervalId = setInterval(() => {
           bsMessagePort.PostBSMessage({geTimeForSchedule:"geTimeForSchedule"});                  
       }, 60000); 
    }
       
    function rebootTimerHander()
    {
        const thirtySixHoursInMs = 36 * 60 * 60 * 1000;
        const intervalId = setTimeout(() => {
            rebootFlag = 1
            bsMessagePort.PostBSMessage({rebootFlag:String(rebootFlag)}); 
            bsMessagePort.PostBSMessage({setDeviceCommand:"setDisplayReboot"});                  
       }, thirtySixHoursInMs); 
    }    

    function MenuShowCallback()
    {
        // document.getElementById("test").innerHTML = "showMenuCallback";
        MenuStructInit();
        currentMenu = root.find("VolumeFrameDiv");
        // currentMenu.setState("visible")         
        document.getElementById('scheduleMenu').style.visibility = "hidden";
        document.getElementById('dateTimeMenu').style.visibility = "hidden";
        document.getElementById('resetMenu').style.visibility = "hidden";
        document.getElementById('MenuItemDiv').style.visibility = "hidden";
        document.getElementById('MenuFrameDiv').style.visibility = "hidden";        
        document.getElementById('MenuItem1Div').style.backgroundColor = blackColor
        document.getElementById('MenuItem2Div').style.backgroundColor = blackColor
        document.getElementById('MenuItem3Div').style.backgroundColor = blackColor
        document.getElementById('MenuItem4Div').style.backgroundColor = blackColor
        document.getElementById('MenuItem5Div').style.backgroundColor = blackColor
        document.getElementById('MenuItem6Div').style.backgroundColor = blackColor
        
        document.getElementById('TimeSecond').style.backgroundColor = blackColor;
        document.getElementById('TimeMinute').style.backgroundColor = blackColor;
        document.getElementById('TimeHour').style.backgroundColor = blackColor;        
        document.getElementById('DateDay').style.backgroundColor = blackColor;
        document.getElementById('DateMonth').style.backgroundColor = blackColor;
        document.getElementById('DateYear').style.backgroundColor = blackColor;
        
        document.getElementById('MondayOnHour').style.backgroundColor = blackColor;
        document.getElementById('MondayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('MondayOffHour').style.backgroundColor = blackColor;
        document.getElementById('MondayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('MondayActiveSlider').style.outline = "3px solid #000000";
        document.getElementById('TuesdayOnHour').style.backgroundColor = blackColor;
        document.getElementById('TuesdayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('TuesdayOffHour').style.backgroundColor = blackColor;
        document.getElementById('TuesdayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('TuesdayActiveSlider').style.outline = "3px solid #000000";
        document.getElementById('WednesdayOnHour').style.backgroundColor = blackColor;
        document.getElementById('WednesdayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('WednesdayOffHour').style.backgroundColor = blackColor;
        document.getElementById('WednesdayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('WednesdayActiveSlider').style.outline = "3px solid #000000";
        document.getElementById('ThursdayOnHour').style.backgroundColor = blackColor;
        document.getElementById('ThursdayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('ThursdayOffHour').style.backgroundColor = blackColor;
        document.getElementById('ThursdayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('ThursdayActiveSlider').style.outline = "3px solid #000000";
        document.getElementById('FridayOnHour').style.backgroundColor = blackColor;
        document.getElementById('FridayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('FridayOffHour').style.backgroundColor = blackColor;
        document.getElementById('FridayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('FridayActiveSlider').style.outline = "3px solid #000000";
        document.getElementById('SaturdayOnHour').style.backgroundColor = blackColor;
        document.getElementById('SaturdayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('SaturdayOffHour').style.backgroundColor = blackColor;
        document.getElementById('SaturdayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('SaturdayActiveSlider').style.outline = "3px solid #000000";
        document.getElementById('SundayOnHour').style.backgroundColor = blackColor;
        document.getElementById('SundayOnMinute').style.backgroundColor = blackColor;
        document.getElementById('SundayOffHour').style.backgroundColor = blackColor;
        document.getElementById('SundayOffMinute').style.backgroundColor = blackColor;
        document.getElementById('SundayActiveSlider').style.outline = "3px solid #000000";      
        
        
        document.getElementById('menu').style.backgroundImage = "url('./image/OverlayMain.png')";
        modeBtn.style.backgroundImage = "url('./image/MenuUnselected.png')";
        powerBtn.style.backgroundImage = "url('./image/PowerUnselected.png')";
        document.getElementById('VolumeLabel').style.visibility = "visible";
        document.getElementById('MenuStatusLabel').textContent = "Volume";
        
    }
    function MenuHiddenCallback()
    {
        root.destroy()
        bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
    }
    function MenuStructInit()
    {
        root = new ListNode('VolumeFrameDiv',"hidden");        
        const MenuItem1Div = root.addChild('MenuItem1Div',"hidden");
        const MenuItem2Div = root.addChild('MenuItem2Div',"hidden");
        const MenuItem3Div = root.addChild('MenuItem3Div',"hidden");
        const MenuItem4Div = root.addChild('MenuItem4Div',"hidden");
        const MenuItem5Div = root.addChild('MenuItem5Div',"hidden");
        const MenuItem6Div = root.addChild('MenuItem6Div',"hidden");
        
        const MondayOnHour = MenuItem2Div.addChild('MondayOnHour',"hidden");
        const MondayOnMinute = MenuItem2Div.addChild('MondayOnMinute',"hidden");
        const MondayOffHour = MenuItem2Div.addChild('MondayOffHour',"hidden");
        const MondayOffMinute = MenuItem2Div.addChild('MondayOffMinute',"hidden");
        const MondayActive = MenuItem2Div.addChild('MondayActive',"hidden");
        const TuesdayOnHour = MenuItem2Div.addChild('TuesdayOnHour',"hidden");
        const TuesdayOnMinute = MenuItem2Div.addChild('TuesdayOnMinute',"hidden");
        const TuesdayOffHour = MenuItem2Div.addChild('TuesdayOffHour',"hidden");
        const TuesdayOffMinute = MenuItem2Div.addChild('TuesdayOffMinute',"hidden");
        const TuesdayActive = MenuItem2Div.addChild('TuesdayActive',"hidden");
        const WednesdayOnHour = MenuItem2Div.addChild('WednesdayOnHour',"hidden");
        const WednesdayOnMinute = MenuItem2Div.addChild('WednesdayOnMinute',"hidden");
        const WednesdayOffHour = MenuItem2Div.addChild('WednesdayOffHour',"hidden");
        const WednesdayOffMinute = MenuItem2Div.addChild('WednesdayOffMinute',"hidden");
        const WednesdayActive = MenuItem2Div.addChild('WednesdayActive',"hidden");
        const ThursdayOnHour = MenuItem2Div.addChild('ThursdayOnHour',"hidden");
        const ThursdayOnMinute = MenuItem2Div.addChild('ThursdayOnMinute',"hidden");
        const ThursdayOffHour = MenuItem2Div.addChild('ThursdayOffHour',"hidden");
        const ThursdayOffMinute = MenuItem2Div.addChild('ThursdayOffMinute',"hidden");
        const ThursdayActive = MenuItem2Div.addChild('ThursdayActive',"hidden");
        const FridayOnHour = MenuItem2Div.addChild('FridayOnHour',"hidden");
        const FridayOnMinute = MenuItem2Div.addChild('FridayOnMinute',"hidden");
        const FridayOffHour = MenuItem2Div.addChild('FridayOffHour',"hidden");
        const FridayOffMinute = MenuItem2Div.addChild('FridayOffMinute',"hidden");
        const FridayActive = MenuItem2Div.addChild('FridayActive',"hidden");
        const SaturdayOnHour = MenuItem2Div.addChild('SaturdayOnHour',"hidden");
        const SaturdayOnMinute = MenuItem2Div.addChild('SaturdayOnMinute',"hidden");
        const SaturdayOffHour = MenuItem2Div.addChild('SaturdayOffHour',"hidden");
        const SaturdayOffMinute = MenuItem2Div.addChild('SaturdayOffMinute',"hidden");
        const SaturdayActive = MenuItem2Div.addChild('SaturdayActive',"hidden");
        const SundayOnHour = MenuItem2Div.addChild('SundayOnHour',"hidden");
        const SundayOnMinute = MenuItem2Div.addChild('SundayOnMinute',"hidden");
        const SundayOffHour = MenuItem2Div.addChild('SundayOffHour',"hidden");
        const SundayOffMinute = MenuItem2Div.addChild('SundayOffMinute',"hidden");
        const SundayActive = MenuItem2Div.addChild('SundayActive',"hidden");
        
        const DateYear = MenuItem3Div.addChild('DateYear',"hidden");
        const DateMonth = MenuItem3Div.addChild('DateMonth',"hidden");
        const DateDay = MenuItem3Div.addChild('DateDay',"hidden");
        const TimeHour = MenuItem3Div.addChild('TimeHour',"hidden");
        const TimeMinute = MenuItem3Div.addChild('TimeMinute',"hidden");
        const TimeSecond = MenuItem3Div.addChild('TimeSecond',"hidden");        
        const dialogYes = MenuItem6Div.addChild('dialogYes',"hidden");
        const dialogNo = MenuItem6Div.addChild('dialogNo',"hidden");

    }
    let menuKeyCount = 0;
    let menuKeyDownFlag = false;
    function ButtonMenuKeyPressed()
    {
        menuKeyCount = 0;
        menuKeyDownFlag = true;
        if (tvPowerState ==0)
        {
            tvPowerState = 1;
            bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
            return 0;
        }

        
        if(root.getNodeLevel(currentMenu.value) == 1)
        {
            modeBtn.style.backgroundImage = "url('./image/MenuSelected.png')";
        }
        else
        {
            modeBtn.style.backgroundImage = "url('./image/BackSelected.png')";
        }
        
    }
    
    function ButtonMenuKeyReleased()
    {
        if(myMenu.showFlag == false)
        {
            myMenu.showMenu()
        }
        else
        {
            if(root.getNodeLevel(currentMenu.value) == 1)
            {
                myMenu.resetTimer(myMenu.longDelay)
                document.getElementById('menu').style.backgroundImage = "url('./image/OverlayMainBlack.png')";
                modeBtn.style.backgroundImage = "url('./image/BackUnselected.png')";
                powerBtn.style.backgroundImage = "url('./image/OkUnselected.png')";
                document.getElementById('MenuFrameDiv').style.visibility = "visible";
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem1Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem1Div').focus() 
                document.getElementById('VolumeLabel').style.visibility = "hidden";
                document.getElementById('MenuStatusLabel').textContent = "Menu"; 
                
                currentMenu = currentMenu.firstChild;
            }
            else if(root.getNodeLevel(currentMenu.value) == 2)
            {
                myMenu.resetTimer(myMenu.shortDelay)
                modeBtn.style.backgroundImage = "url('./image/BackUnselected.png')";
                let ElementName = currentMenu.value;
                let ElementItem = document.getElementById(ElementName);
                simulateKeyPress(ElementItem,"Escape")
            }
            else if(root.getNodeLevel(currentMenu.value) == 3)
            {
                myMenu.resetTimer(myMenu.longDelay)
                modeBtn.style.backgroundImage = "url('./image/BackUnselected.png')";
                let ElementName = currentMenu.value;
                let ElementItem = document.getElementById(ElementName);
                simulateKeyPress(ElementItem,"Escape")
                
            }
            else
            {
                myMenu.resetTimer(myMenu.longDelay)
                modeBtn.style.backgroundImage = "url('./image/BackUnselected.png')";
                currentMenu = currentMenu.parent;                
            }
            
            
           
        }
        
    }
    function ButtonMenukeyLongPress()
    {
        
    }
    function ButtonMenuKeyContinue()
    {
        if (menuKeyDownFlag == true)
        {
           menuKeyCount = menuKeyCount + 1;
           if(menuKeyCount >= 41)
           {
               menuKeyCount = 0;
               menuKeyDownFlag = false;
               //toDo something
               startbackdoorFlag = 1;
               bsMessagePort.PostBSMessage({startbackdoor:String(startbackdoorFlag)});
            }
        }
        
    }
    function ButtonUpKeyPressed()
    {
        if (tvPowerState ==0)
        {
            tvPowerState = 1;
            bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
            return 0;
        }
        
        if(myMenu.showFlag == false)
        {
            myMenu.showMenu()
            currentMenu.setState("unselected") 
        }
        else
        {
            upBtn.style.backgroundImage = "url('./image/VolUpSelected.png')";
            
            
            if(root.getNodeLevel(currentMenu.value) == 1)
            {
               myMenu.resetTimer(myMenu.shortDelay);
               if (currentVolume<100)
               {
                   currentVolume = currentVolume +1
                   updateItemValue("volume",currentVolume)
               }
               else
               {
                   currentVolume = 100
                   updateItemValue("volume",currentVolume)
               }
            }
            else if(root.getNodeLevel(currentMenu.value) == 2)
            {
                myMenu.resetTimer(myMenu.longDelay);
                let ElementName = currentMenu.value;
                let ElementItem = document.getElementById(ElementName);
                simulateKeyPress(ElementItem,"ArrowUp")
            }
            else if(root.getNodeLevel(currentMenu.value) == 3)
            {
                myMenu.resetTimer(myMenu.longDelay);
                let ElementName = currentMenu.value;
                let ElementItem = document.getElementById(ElementName);
                simulateKeyPress(ElementItem,"ArrowUp")
            }
        }
        
    }
    function ButtonUpKeyReleased()
    {
        upBtn.style.backgroundImage = "url('./image/VolUpUnselected.png')";
    }
    function ButtonUpkeyLongPress()
    {
        
    }
    function ButtonUpKeyContinue()
    {
        if(root.getNodeLevel(currentMenu.value) == 1)
        {
           myMenu.resetTimer(myMenu.shortDelay);
           if (currentVolume<100)
           {
               currentVolume = currentVolume +1
               updateItemValue("volume",currentVolume)
           }
           else
           {
               currentVolume = 100
               updateItemValue("volume",currentVolume)
           }

        }
        else if(root.getNodeLevel(currentMenu.value) == 2)
        {
            let ElementName = currentMenu.value;
            let ElementItem = document.getElementById(ElementName);
            if ((ElementName == "MenuItem4Div") || (ElementName == "MenuItem5Div"))
            {
                if (currentMenu.state == "visible")
                {
                    simulateKeyPress(ElementItem,"ArrowUp") 
                }  
            }
            
        }
        else if(root.getNodeLevel(currentMenu.value) == 3)
        {
            let ElementName = currentMenu.value;
            let ElementItem = document.getElementById(ElementName);            
            if(currentMenu.parent.value == "MenuItem3Div")
            {
                if (currentMenu.state == "visible")
                {
                     simulateKeyPress(ElementItem,"ArrowUp") 
                }
            }
            else if(currentMenu.parent.value == "MenuItem2Div")
            {
                if (currentMenu.state == "visible")
                {
                     simulateKeyPress(ElementItem,"ArrowUp") 
                }
            }
        }
    }
    function ButtonDownKeyPressed()
    {
        if (tvPowerState ==0)
        {
            tvPowerState = 1;
            bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
            return 0;
        }
        
        if(myMenu.showFlag == false)
        {
            myMenu.showMenu()
        }
        else
        {
           downBtn.style.backgroundImage = "url('./image/VolDwnSelected.png')";
           if(root.getNodeLevel(currentMenu.value) == 1)
           {
                myMenu.resetTimer(myMenu.shortDelay);
                if (currentVolume>0)
                {
                  currentVolume = currentVolume -1
                  updateItemValue("volume",currentVolume)
                }
                else
                {
                  currentVolume = 0
                  updateItemValue("volume",currentVolume)
                }

           }
           else if(root.getNodeLevel(currentMenu.value) == 2)
           {
               myMenu.resetTimer(myMenu.longDelay);
               let ElementName = currentMenu.value;
               let ElementItem = document.getElementById(ElementName);
               simulateKeyPress(ElementItem,"ArrowDown")
           }
           else if(root.getNodeLevel(currentMenu.value) == 3)
           {
               myMenu.resetTimer(myMenu.longDelay);
               let ElementName = currentMenu.value;
               let ElementItem = document.getElementById(ElementName);
               simulateKeyPress(ElementItem,"ArrowDown")
           }
        }
        
        
    }
    function ButtonDownKeyReleased()
    {
        downBtn.style.backgroundImage = "url('./image/VolDwnUnselected.png')";
    }
    function ButtonDownkeyLongPress()
    {
        
    }
    function ButtonDownKeyContinue()
    {
        if(root.getNodeLevel(currentMenu.value) == 1)
        {
            myMenu.resetTimer(myMenu.shortDelay);
           if (currentVolume>0)
           {
               currentVolume = currentVolume -1
               updateItemValue("volume",currentVolume)
           }
           else
           {
               currentVolume = 0
               updateItemValue("volume",currentVolume)
           }

        }
        else if(root.getNodeLevel(currentMenu.value) == 2)
        {
            let ElementName = currentMenu.value;
            let ElementItem = document.getElementById(ElementName);
            if ((ElementName == "MenuItem4Div") || (ElementName == "MenuItem5Div"))
            {
                if (currentMenu.state == "visible")
                {
                     simulateKeyPress(ElementItem,"ArrowDown") 
                }                   
            }
        }
        else if(root.getNodeLevel(currentMenu.value) == 3)
        {
            let ElementName = currentMenu.value;
            let ElementItem = document.getElementById(ElementName);            
            if(currentMenu.parent.value  == "MenuItem3Div")
            {
                if (currentMenu.state == "visible")
                {
                     simulateKeyPress(ElementItem,"ArrowDown") 
                }
            }
            else if(currentMenu.parent.value == "MenuItem2Div")
            {
                if (currentMenu.state == "visible")
                {
                     simulateKeyPress(ElementItem,"ArrowDown") 
                }
            }
        }
    }
    let powerKeyCount = 0;
    let powerKeyDownFlag = false;
    function ButtonOKKeyPressed()
    {
        powerKeyCount = 0;
        powerKeyDownFlag = true;
        if (tvPowerState ==0)
        {
            tvPowerState = 1;
            bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
            return 0;
        }
        
        if(myMenu.showFlag == false)
        {
            myMenu.showMenu()
        }
        else
        {
            if(root.getNodeLevel(currentMenu.value) == 1)
            {
                powerBtn.style.backgroundImage = "url('./image/PowerSelected.png')";
                myMenu.resetTimer(myMenu.shortDelay);
                if (tvPowerState ==1)
                {
                    tvPowerState = 0;
                    bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                }
            }
            else if(root.getNodeLevel(currentMenu.value) == 2)
            {
                powerBtn.style.backgroundImage = "url('./image/OkSelected.png')";
                myMenu.resetTimer(myMenu.longDelay);
                let ElementName = currentMenu.value;
                let ElementItem = document.getElementById(ElementName);
                simulateKeyPress(ElementItem,"Enter")
            }
            else if(root.getNodeLevel(currentMenu.value) == 3)
            {
                powerBtn.style.backgroundImage = "url('./image/OkSelected.png')";
                myMenu.resetTimer(myMenu.longDelay);
                let ElementName = currentMenu.value;
                let ElementItem = document.getElementById(ElementName);
                if((ElementName == "dialogYes")||(ElementName == "dialogNo"))
                {
                    document.getElementById(ElementName).style.backgroundColor = blueColor
                }
                simulateKeyPress(ElementItem,"Enter")
                

            }
            else{}
        }
    }
    function ButtonOKKeyReleased()
    {
        if(root.getNodeLevel(currentMenu.value) == 1)
        {
            powerBtn.style.backgroundImage = "url('./image/PowerUnselected.png')";
        }
        else if(root.getNodeLevel(currentMenu.value) == 2)
        {
            powerBtn.style.backgroundImage = "url('./image/OkUnselected.png')";
        }
        else if(root.getNodeLevel(currentMenu.value) == 3)
        {
            powerBtn.style.backgroundImage = "url('./image/OkUnselected.png')";
            let ElementName = currentMenu.value;
            if((ElementName == "dialogYes")||(ElementName == "dialogNo"))
            {
                document.getElementById(ElementName).style.backgroundColor = yellowColor
            }
            
        }
        else{}
    }
    function ButtonOKkeyLongPress()
    {

    }
    
    function ButtonOKKeyContinue()
    {
        if (powerKeyDownFlag == true)
        {
           powerKeyCount = powerKeyCount + 1;
           if(powerKeyCount >= 41)
           {
               powerKeyCount = 0;
               powerKeyDownFlag = false;
               
               if(myMenu.showFlag == true)
               {       
                   myMenu.hideMenu()
               }
               myMenu.showMenu()
               myMenu.resetTimer(myMenu.resetDelay);
               document.getElementById('menu').style.backgroundImage = "url('./image/OverlayMainBlack.png')";
               modeBtn.style.backgroundImage = "url('./image/BackUnselected.png')";
               powerBtn.style.backgroundImage = "url('./image/OkUnselected.png')";
               document.getElementById('MenuFrameDiv').style.visibility = "visible";
               document.getElementById('resetMenu').style.visibility = "visible";
               document.getElementById('dialogYes').style.outline = '3px solid #00AEEF';
               document.getElementById('dialogYes').focus() 
               document.getElementById('MenuStatusLabel').textContent = "RESET";
               document.getElementById('VolumeLabel').style.visibility = "hidden";
               currentMenu = root.find("dialogYes");
           } 
        }
        
    }   

    function parseMessage(msg)
    {
        // console.log(msg);
        // document.getElementById("test").innerHTML = msg.data.pluginmessage;
        try {
               keyJson = JSON.parse(msg.data.pluginmessage);
               if (keyJson && keyJson.hasOwnProperty('KeyValue') && keyJson.hasOwnProperty('KeyState'))
               {
                   var keyValue = ""
                   var KeyState = ""
                   keyValue = parseInt(keyJson['KeyValue']);
                   KeyState = keyJson['KeyState'];
                   if (KeyState=='pressed')
                   {
                       if(keyValue == 1)
                       {
                           buttonMenu.setKeyValue(true)
                       }
                       else if(keyValue == 2)
                       {
                           buttonDown.setKeyValue(true)
                       }
                       else if(keyValue == 3)
                       {
                           buttonUp.setKeyValue(true)
                       }
                       else if(keyValue == 4)
                       {
                           buttonOK.setKeyValue(true)
                       }
                       else
                       {}
                                                   
                   }
                   else if(KeyState=='release')
                   {
                      if(keyValue == 0)
                       {
                          buttonMenu.setKeyValue(false) 
                          buttonDown.setKeyValue(false)
                          buttonUp.setKeyValue(false)                              
                          buttonOK.setKeyValue(false)                           
                       }
                   }
                   else
                   {
                       
                   }
                   
               }
                if (keyJson && keyJson.hasOwnProperty('volume'))
                {
                    currentVolume = parseInt(keyJson['volume']);
                    document.getElementById("VolumeLabel").textContent = currentVolume.toString();
                }
                if (keyJson && keyJson.hasOwnProperty('brightness'))
                {
                    brightness = parseInt(keyJson['brightness']); 
                }
                if (keyJson && keyJson.hasOwnProperty('tvPowerState'))
                {
                    tvPowerState = parseInt(keyJson['tvPowerState']);
                }
                if (keyJson && keyJson.hasOwnProperty('rebootFlag'))
                {
                    rebootFlag = parseInt(keyJson['rebootFlag']);
                } 
                if (keyJson && keyJson.hasOwnProperty('automaticOn'))
                {
                    automaticOn = parseInt(keyJson['automaticOn']);
                    if(automaticOn == 1)
                    {
                        // document.getElementById("automaticOnCheckBox").setAttribute('checked', '')
                        document.getElementById("automaticOnCheckBox").checked = true;
                    }
                    else if(automaticOn == 0)
                    {
                        // document.getElementById("automaticOnCheckBox").removeAttribute('checked')
                        document.getElementById("automaticOnCheckBox").checked = false;
                    }
                }
                if (keyJson && keyJson.hasOwnProperty('defaultVolume'))
                {
                    defaultVolume = parseInt(keyJson['defaultVolume']);
                    document.getElementById("DefaultVolumeValueLabel").textContent = defaultVolume.toString();
                }
                if (keyJson && keyJson.hasOwnProperty('defaultBrightness'))
                {
                    defaultBrightness = parseInt(keyJson['defaultBrightness']);
                    document.getElementById("BrightnessValueLabel").textContent = defaultBrightness.toString();
                    
                }
                if (keyJson && keyJson.hasOwnProperty('getDateTime'))
                {
                    let getDateTime = keyJson['getDateTime'];
                    //document.getElementById("test").innerHTML =  getDateTime
                    let result = parseDateTime(getDateTime)  
                    document.getElementById('DateYear').value = result['year'].toString().padStart(4, '0');
                    document.getElementById('DateMonth').value = result['month'].toString().padStart(2, '0');
                    document.getElementById('DateDay').value = result['day'].toString().padStart(2, '0');
                    document.getElementById('TimeHour').value = result['hour'].toString().padStart(2, '0');
                    document.getElementById('TimeMinute').value = result['minute'].toString().padStart(2, '0');
                    document.getElementById('TimeSecond').value = result['second'].toString().padStart(2, '0');
                    
                }
                if (keyJson && keyJson.hasOwnProperty('geTimeForPowerOn'))
                {
                    let PowerOnDateTime = keyJson['geTimeForPowerOn'];                    
                    let result = parseDateTime(PowerOnDateTime)
                    if(rebootFlag == 1)
                    {
                        rebootFlag = 0
                        bsMessagePort.PostBSMessage({rebootFlag:String(rebootFlag)});
                        bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                    }
                    else
                    {
                        if(automaticOn == 1)
                        {
                            if(ScheduleJsonData[result['weekday']]["Active"]== true)
                            {
                                let onHours = ScheduleJsonData[result['weekday']]['OnTime']['hour'];
                                let onMinutes = ScheduleJsonData[result['weekday']]['OnTime']['minute'];                            
                                let offHours = ScheduleJsonData[result['weekday']]['OffTime']['hour'];
                                let offMinutes = ScheduleJsonData[result['weekday']]['OffTime']['minute'];
                                let outOfTime = compareTimeWithNow(onHours,onMinutes,offHours,offMinutes,result);
                                if(outOfTime)
                                {
                                    tvPowerState = 0;
                                    bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                                }
                                else
                                {
                                    tvPowerState = 1;
                                    bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                                }
                            }
                            else
                            {
                                tvPowerState = 0;
                                bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                            }
                        }
                        else 
                        {
                            tvPowerState = 0;
                            bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                        }
                    }
                }
                if (keyJson && keyJson.hasOwnProperty('geTimeForSchedule'))
                {
                    let scheduleDateTime = keyJson['geTimeForSchedule'];                    
                    let result = parseDateTime(scheduleDateTime)
                    // document.getElementById("test").innerHTML =  result['year'].toString()+"-"+result['month'].toString()+"-"+result['day'].toString()+
                    // " "+result['hour'].toString()+":"+result['minute'].toString()+":"+result['second'].toString()+" "+result['weekday']
                    if(automaticOn == 1)
                    {
                        scheduleEvent(result)
                    }                   
                }
                
                if (keyJson && keyJson.hasOwnProperty('ScheduleJson'))
                {
                    let ScheduleJson = JSON.parse(keyJson['ScheduleJson']);
                    //document.getElementById("test").innerHTML =  keyJson['ScheduleJson']
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Monday'))
                    {
                        ScheduleJsonData['Monday'] = ScheduleJson['Monday']
                    }
                    else
                    {
                        ScheduleJson['Monday'] = ScheduleJsonData['Monday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Tuesday'))
                    {
                        ScheduleJsonData['Tuesday'] = ScheduleJson['Tuesday']
                    }
                    else
                    {
                        ScheduleJson['Tuesday'] = ScheduleJsonData['Tuesday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Wednesday'))
                    {
                        ScheduleJsonData['Wednesday'] = ScheduleJson['Wednesday']
                    }
                    else
                    {
                        ScheduleJson['Wednesday'] = ScheduleJsonData['Wednesday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Thursday'))
                    {
                        ScheduleJsonData['Thursday'] = ScheduleJson['Thursday']
                    }
                    else
                    {
                        ScheduleJson['Thursday'] = ScheduleJsonData['Thursday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Friday'))
                    {
                        ScheduleJsonData['Friday'] = ScheduleJson['Friday']
                    }
                    else
                    {
                        ScheduleJson['Friday'] = ScheduleJsonData['Friday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Saturday'))
                    {
                        ScheduleJsonData['Saturday'] = ScheduleJson['Saturday']
                    }
                    else
                    {
                        ScheduleJson['Saturday'] = ScheduleJsonData['Saturday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    if (ScheduleJson && ScheduleJson.hasOwnProperty('Sunday'))
                    {
                        ScheduleJsonData['Sunday'] = ScheduleJson['Sunday']
                    }
                    else
                    {
                        ScheduleJson['Sunday'] = ScheduleJsonData['Sunday']
                        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJson)});
                    }
                    bsMessagePort.PostBSMessage({geTimeForPowerOn:"getDateTime"}); 
                    initScheduleMenu();
                }
               // 您的按钮逻辑...
           } 
           catch (error) 
           {
               console.error("JSON解析错误:", error);
           }
    }  
    function scheduleEvent(dateTimeJs)
    {
        if(ScheduleJsonData[dateTimeJs['weekday']]["Active"]== true)
        {
            let onHours = ScheduleJsonData[dateTimeJs['weekday']]['OnTime']['hour'];
            let onMinutes = ScheduleJsonData[dateTimeJs['weekday']]['OnTime']['minute'];
            let offHours = ScheduleJsonData[dateTimeJs['weekday']]['OffTime']['hour'];
            let offMinutes = ScheduleJsonData[dateTimeJs['weekday']]['OffTime']['minute'];
            
            if(dateTimeJs['hour'] == onHours)
            {
               if(dateTimeJs['minute'] == onMinutes)
               {
                  tvPowerState = 1;
                  bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
               }
            }
            
            if(dateTimeJs['hour'] == offHours)
            {
               if(dateTimeJs['minute'] == offMinutes)
               {
                  tvPowerState = 0;
                  bsMessagePort.PostBSMessage({tvPowerState:String(tvPowerState)});
                  const timeoutId = setTimeout(() => {
                      bsMessagePort.PostBSMessage({setDeviceCommand:"setDisplayReboot"});                  
                 }, 60000); 
               }
            }
        }       
    }
    
    function compareTimeWithNow(onHours, onMinutes,offHours, offMinutes,currentTime) 
    {
        let isEarlyForOn = false;
        let isLateForOff = false;
        
        const isValidTime = (h, m) => h >= 0 && h <= 23 && m >= 0 && m <= 59;
        if (!isValidTime(onHours, onMinutes)) return false;
        if (!isValidTime(offHours, offMinutes)) return false;
            
        const onTotalMinutes = onHours * 60 + onMinutes;
        const offTotalMinutes = offHours * 60 + offMinutes;
        let currentTotalMinutes = currentTime["hour"] * 60 + currentTime["minute"];
        
        if(currentTotalMinutes < (onTotalMinutes - 0))
        {
            isEarlyForOn = true
        }
        if(currentTotalMinutes > (offTotalMinutes + 0))
        {
            isLateForOff = true
        }
        
        return isEarlyForOn || isLateForOff;
    }
    
    function updateItemValue(name,value)
    {
        if (name == "volume")
        {
            document.getElementById("VolumeLabel").textContent = value.toString();
            bsMessagePort.PostBSMessage({volume:String(value)});
        }
        else if (name == "defaultVolume")
        {
             document.getElementById("DefaultVolumeValueLabel").textContent = value.toString();
             bsMessagePort.PostBSMessage({defaultVolume:String(value)});
        }
        else if (name == "defaultBrightness")
        {
           document.getElementById("BrightnessValueLabel").textContent = value.toString(); 
           bsMessagePort.PostBSMessage({defaultBrightness:String(value)});
        }
        else
        {
            
        }
        
    }
       
    
    function OnLoadMenu()
    {
      const MenuItem1Div = document.getElementById('MenuItem1Div');
      const MenuItem2Div = document.getElementById('MenuItem2Div');
      const MenuItem3Div = document.getElementById('MenuItem3Div');
      const MenuItem4Div = document.getElementById('MenuItem4Div');
      const MenuItem5Div = document.getElementById('MenuItem5Div');
      const MenuItem6Div = document.getElementById('MenuItem6Div');
      
      MenuItem1Div.addEventListener('keydown', function(e) {
          if (e.key === 'ArrowUp') {
            e.preventDefault();
            document.getElementById('MenuItem1Div').style.backgroundColor = blackColor;
            document.getElementById('MenuItem6Div').style.backgroundColor = yellowColor;
            document.getElementById('MenuItem6Div').focus();
            currentMenu = currentMenu.getLeftSibling();
           
              
          } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            document.getElementById('MenuItem1Div').style.backgroundColor = blackColor
            document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
            document.getElementById('MenuItem2Div').focus()
            currentMenu = currentMenu.getRightSibling();
          }
          else if (e.key === 'Enter') {
                e.preventDefault();
                const myCheckBox = document.getElementById('automaticOnCheckBox') 
                if(myCheckBox.checked == true)
                {
                    myCheckBox.checked = false;  
                    automaticOn = 0;
                    bsMessagePort.PostBSMessage({automaticOn:"0"});
                }
                else
                {
                    myCheckBox.checked = true;  
                    automaticOn = 1;
                    bsMessagePort.PostBSMessage({automaticOn:"1"});
                }
            
          }
          else if (e.key === 'Escape') {
            e.preventDefault();
            document.getElementById('MenuItem1Div').style.backgroundColor = blackColor
            LayMenuToLayVolume()
          }
      });
      MenuItem2Div.addEventListener('keydown', function(e) {
          if (e.key === 'ArrowUp') {
            e.preventDefault();
            document.getElementById('MenuItem2Div').style.backgroundColor = blackColor;
            document.getElementById('MenuItem1Div').style.backgroundColor = yellowColor;
            document.getElementById('MenuItem1Div').focus();
            currentMenu = currentMenu.getLeftSibling();
           
              
          } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            document.getElementById('MenuItem2Div').style.backgroundColor = blackColor
            document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
            document.getElementById('MenuItem3Div').focus()
            currentMenu = currentMenu.getRightSibling();
          }
          else if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('MenuItemDiv').style.visibility = "hidden";
                document.getElementById('scheduleMenu').style.visibility = "visible";  
                document.getElementById('MondayOnHour').style.backgroundColor = yellowColor;
                document.getElementById('MondayOnHour').focus();
                document.getElementById('MenuStatusLabel').textContent = "SET POWER ON/OFF SCHEDULE";
                currentMenu = currentMenu.firstChild;            
          }
          else if (e.key === 'Escape') {
            e.preventDefault();
            document.getElementById('MenuItem2Div').style.backgroundColor = blackColor
            LayMenuToLayVolume()
          }
      });
    MenuItem3Div.addEventListener('keydown', function(e) {
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          document.getElementById('MenuItem3Div').style.backgroundColor = blackColor;
          document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor;
          document.getElementById('MenuItem2Div').focus();
          currentMenu = currentMenu.getLeftSibling();
         
            
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          document.getElementById('MenuItem3Div').style.backgroundColor = blackColor
          document.getElementById('MenuItem4Div').style.backgroundColor = yellowColor
          document.getElementById('MenuItem4Div').focus()
          currentMenu = currentMenu.getRightSibling();
        }
        else if (e.key === 'Enter') {
              e.preventDefault();
              document.getElementById('MenuItemDiv').style.visibility = "hidden";
              document.getElementById('dateTimeMenu').style.visibility = "visible";  
              document.getElementById('DateYear').style.backgroundColor = yellowColor;
              document.getElementById('DateYear').focus();
              document.getElementById('MenuStatusLabel').textContent = "ADJUST CURRENT TIME";
              currentMenu = currentMenu.firstChild;
              bsMessagePort.PostBSMessage({getDateTime:"getDateTime"}); 
              bsMessagePort.PostBSMessage({SetVideoPlayerState:"Stop"});
        }
        else if (e.key === 'Escape') {
          e.preventDefault();
          document.getElementById('MenuItem3Div').style.backgroundColor = blackColor
          LayMenuToLayVolume()
        }
    });
    MenuItem4Div.addEventListener('keydown', function(e) {        
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          if(currentMenu.state == "hidden")
          {
              document.getElementById('MenuItem4Div').style.backgroundColor = blackColor;
              document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor;
              document.getElementById('MenuItem3Div').focus();
              currentMenu = currentMenu.getLeftSibling();
          }
          else if(currentMenu.state == "visible")
          {
              if (tempVolume<100)
              {
                  tempVolume = tempVolume + 1
                                 
              }
              else
              {
                  tempVolume = 100  
              }
              document.getElementById("DefaultVolumeValueLabel").textContent = tempVolume.toString();
              bsMessagePort.PostBSMessage({tempVolume:String(tempVolume)});  
          }
          else{}
          
         
            
        } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            if(currentMenu.state == "hidden")
            {
               document.getElementById('MenuItem4Div').style.backgroundColor = blackColor
               document.getElementById('MenuItem5Div').style.backgroundColor = yellowColor
               document.getElementById('MenuItem5Div').focus()
               currentMenu = currentMenu.getRightSibling(); 
            }
            else if(currentMenu.state == "visible")
            {
                if (tempVolume>0)
                {
                    tempVolume = tempVolume -1
                }
                else
                {
                    tempVolume = 0
                }
                document.getElementById("DefaultVolumeValueLabel").textContent = tempVolume.toString();
                bsMessagePort.PostBSMessage({tempVolume:String(tempVolume)});
            }
            else{}
        }
        else if (e.key === 'Enter') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                  currentMenu.setState("visible")
                  document.getElementById('MenuItem4Div').style.backgroundColor = blueColor
                  tempVolume = defaultVolume;
              }
              else
              {
                currentMenu.setState("hidden")
                document.getElementById('MenuItem4Div').style.backgroundColor = yellowColor 
                defaultVolume = tempVolume;
                updateItemValue("defaultVolume",defaultVolume); 
                currentVolume = defaultVolume;
                updateItemValue("volume",currentVolume);                 
              }
          
        }
        else if (e.key === 'Escape') {
          e.preventDefault();
          if(currentMenu.state == "hidden")
          {
             document.getElementById('MenuItem4Div').style.backgroundColor = blackColor
             LayMenuToLayVolume() 
          }
          else if(currentMenu.state == "visible")
          {
             currentMenu.setState("hidden")
             document.getElementById('MenuItem4Div').style.backgroundColor = yellowColor 
             updateItemValue("defaultVolume",defaultVolume);
             updateItemValue("volume",currentVolume);  
          }
          else{}
        }
    });
    MenuItem5Div.addEventListener('keydown', function(e) {
        
        if (e.key === 'ArrowUp') {
            e.preventDefault();
            if(currentMenu.state == "hidden")
            {
                document.getElementById('MenuItem5Div').style.backgroundColor = blackColor;
                document.getElementById('MenuItem4Div').style.backgroundColor = yellowColor;
                document.getElementById('MenuItem4Div').focus();
                currentMenu = currentMenu.getLeftSibling();
            }
            else if(currentMenu.state == "visible")
            {
                if (tempBrightness<100)
                {
                    tempBrightness = tempBrightness +1
                }
                else
                {
                    tempBrightness = 100
                }
                document.getElementById("BrightnessValueLabel").textContent = tempBrightness.toString();
                bsMessagePort.PostBSMessage({tempBrightness:String(tempBrightness)});
            }
            else{}
         
            
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
           if(currentMenu.state == "hidden")
           {
               document.getElementById('MenuItem5Div').style.backgroundColor = blackColor
               document.getElementById('MenuItem6Div').style.backgroundColor = yellowColor
               document.getElementById('MenuItem6Div').focus()
               currentMenu = currentMenu.getRightSibling();
           }
           else if(currentMenu.state == "visible")
           {
               if (tempBrightness>0)
               {
                   tempBrightness = tempBrightness - 1
               }
               else
               {
                   tempBrightness = 0
               }
               document.getElementById("BrightnessValueLabel").textContent = tempBrightness.toString();
               bsMessagePort.PostBSMessage({tempBrightness:String(tempBrightness)});
           }
           else{}
        }
        else if (e.key === 'Enter') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                  currentMenu.setState("visible")
                  document.getElementById('MenuItem5Div').style.backgroundColor = blueColor
                  tempBrightness = defaultBrightness;
              }
              else
              {
                  currentMenu.setState("hidden")
                  document.getElementById('MenuItem5Div').style.backgroundColor = yellowColor 
                  defaultBrightness = tempBrightness;
                  updateItemValue("defaultBrightness",defaultBrightness)
              }
          
        }
        else if (e.key === 'Escape') {
          e.preventDefault();
          if(currentMenu.state == "hidden")
          {
             document.getElementById('MenuItem5Div').style.backgroundColor = blackColor
             LayMenuToLayVolume() 
          }
          else if(currentMenu.state == "visible")
          {
            currentMenu.setState("hidden")
            document.getElementById('MenuItem5Div').style.backgroundColor = yellowColor
            updateItemValue("defaultBrightness",defaultBrightness)
          }
          else{}
        }
    });
    MenuItem6Div.addEventListener('keydown', function(e) {
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          document.getElementById('MenuItem6Div').style.backgroundColor = blackColor;
          document.getElementById('MenuItem5Div').style.backgroundColor = yellowColor;
          document.getElementById('MenuItem5Div').focus();
          currentMenu = currentMenu.getLeftSibling();
         
            
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          document.getElementById('MenuItem6Div').style.backgroundColor = blackColor
          document.getElementById('MenuItem1Div').style.backgroundColor = yellowColor
          document.getElementById('MenuItem1Div').focus()
          currentMenu = currentMenu.getRightSibling();
        }
        else if (e.key === 'Enter') {
              e.preventDefault();
              document.getElementById('MenuItemDiv').style.visibility = "hidden";
              document.getElementById('resetMenu').style.visibility = "visible";  
              document.getElementById('dialogYes').style.outline = '3px solid #00AEEF';
              document.getElementById('dialogYes').focus() 
              document.getElementById('MenuStatusLabel').textContent = "RESET";
              currentMenu = currentMenu.firstChild;
          
        }
        else if (e.key === 'Escape') {
          e.preventDefault();
          document.getElementById('MenuItem6Div').style.backgroundColor = blackColor
          LayMenuToLayVolume()
        }
    });
      
      
    }
    
    function initScheduleMenu()
    {
        const MondayOnHour = document.getElementById('MondayOnHour');
        const MondayOnMinute = document.getElementById('MondayOnMinute');
        const MondayOffHour = document.getElementById('MondayOffHour');
        const MondayOffMinute = document.getElementById('MondayOffMinute');
        const MondayActive = document.getElementById('MondayActive');
        MondayOnHour.value = ScheduleJsonData["Monday"]["OnTime"]["hour"].toString().padStart(2, '0')
        MondayOnMinute.value = ScheduleJsonData["Monday"]["OnTime"]["minute"].toString().padStart(2, '0')
        MondayOffHour.value = ScheduleJsonData["Monday"]["OffTime"]["hour"].toString().padStart(2, '0')
        MondayOffMinute.value = ScheduleJsonData["Monday"]["OffTime"]["minute"].toString().padStart(2, '0')
        MondayActive.checked = ScheduleJsonData["Monday"]["Active"]  
              
        const TuesdayOnHour = document.getElementById('TuesdayOnHour');
        const TuesdayOnMinute = document.getElementById('TuesdayOnMinute');
        const TuesdayOffHour = document.getElementById('TuesdayOffHour');
        const TuesdayOffMinute = document.getElementById('TuesdayOffMinute');
        const TuesdayActive = document.getElementById('TuesdayActive');
        TuesdayOnHour.value = ScheduleJsonData["Tuesday"]["OnTime"]["hour"].toString().padStart(2, '0')
        TuesdayOnMinute.value = ScheduleJsonData["Tuesday"]["OnTime"]["minute"].toString().padStart(2, '0')
        TuesdayOffHour.value = ScheduleJsonData["Tuesday"]["OffTime"]["hour"].toString().padStart(2, '0')
        TuesdayOffMinute.value = ScheduleJsonData["Tuesday"]["OffTime"]["minute"].toString().padStart(2, '0')
        TuesdayActive.checked = ScheduleJsonData["Tuesday"]["Active"]  
        
        const WednesdayOnHour = document.getElementById('WednesdayOnHour');
        const WednesdayOnMinute = document.getElementById('WednesdayOnMinute');
        const WednesdayOffHour = document.getElementById('WednesdayOffHour');
        const WednesdayOffMinute = document.getElementById('WednesdayOffMinute');
        const WednesdayActive = document.getElementById('WednesdayActive');
        WednesdayOnHour.value = ScheduleJsonData["Wednesday"]["OnTime"]["hour"].toString().padStart(2, '0')
        WednesdayOnMinute.value = ScheduleJsonData["Wednesday"]["OnTime"]["minute"].toString().padStart(2, '0')
        WednesdayOffHour.value = ScheduleJsonData["Wednesday"]["OffTime"]["hour"].toString().padStart(2, '0')
        WednesdayOffMinute.value = ScheduleJsonData["Wednesday"]["OffTime"]["minute"].toString().padStart(2, '0')
        WednesdayActive.checked = ScheduleJsonData["Wednesday"]["Active"] 
         
        const ThursdayOnHour = document.getElementById('ThursdayOnHour');
        const ThursdayOnMinute = document.getElementById('ThursdayOnMinute');
        const ThursdayOffHour = document.getElementById('ThursdayOffHour');
        const ThursdayOffMinute = document.getElementById('ThursdayOffMinute');
        const ThursdayActive = document.getElementById('ThursdayActive');
        ThursdayOnHour.value = ScheduleJsonData["Thursday"]["OnTime"]["hour"].toString().padStart(2, '0')
        ThursdayOnMinute.value = ScheduleJsonData["Thursday"]["OnTime"]["minute"].toString().padStart(2, '0')
        ThursdayOffHour.value = ScheduleJsonData["Thursday"]["OffTime"]["hour"].toString().padStart(2, '0')
        ThursdayOffMinute.value = ScheduleJsonData["Thursday"]["OffTime"]["minute"].toString().padStart(2, '0')
        ThursdayActive.checked = ScheduleJsonData["Thursday"]["Active"] 
        
        const FridayOnHour = document.getElementById('FridayOnHour');
        const FridayOnMinute = document.getElementById('FridayOnMinute');
        const FridayOffHour = document.getElementById('FridayOffHour');
        const FridayOffMinute = document.getElementById('FridayOffMinute');
        const FridayActive = document.getElementById('FridayActive');
        FridayOnHour.value = ScheduleJsonData["Friday"]["OnTime"]["hour"].toString().padStart(2, '0')
        FridayOnMinute.value = ScheduleJsonData["Friday"]["OnTime"]["minute"].toString().padStart(2, '0')
        FridayOffHour.value = ScheduleJsonData["Friday"]["OffTime"]["hour"].toString().padStart(2, '0')
        FridayOffMinute.value = ScheduleJsonData["Friday"]["OffTime"]["minute"].toString().padStart(2, '0')
        FridayActive.checked = ScheduleJsonData["Friday"]["Active"] 
        
        const SaturdayOnHour = document.getElementById('SaturdayOnHour');
        const SaturdayOnMinute = document.getElementById('SaturdayOnMinute');
        const SaturdayOffHour = document.getElementById('SaturdayOffHour');
        const SaturdayOffMinute = document.getElementById('SaturdayOffMinute');
        const SaturdayActive = document.getElementById('SaturdayActive');
        SaturdayOnHour.value = ScheduleJsonData["Saturday"]["OnTime"]["hour"].toString().padStart(2, '0')
        SaturdayOnMinute.value = ScheduleJsonData["Saturday"]["OnTime"]["minute"].toString().padStart(2, '0')
        SaturdayOffHour.value = ScheduleJsonData["Saturday"]["OffTime"]["hour"].toString().padStart(2, '0')
        SaturdayOffMinute.value = ScheduleJsonData["Saturday"]["OffTime"]["minute"].toString().padStart(2, '0')
        SaturdayActive.checked = ScheduleJsonData["Saturday"]["Active"]
        
        const SundayOnHour = document.getElementById('SundayOnHour');
        const SundayOnMinute = document.getElementById('SundayOnMinute');
        const SundayOffHour = document.getElementById('SundayOffHour');
        const SundayOffMinute = document.getElementById('SundayOffMinute');
        const SundayActive = document.getElementById('SundayActive');        
        SundayOnHour.value = ScheduleJsonData["Sunday"]["OnTime"]["hour"].toString().padStart(2, '0')
        SundayOnMinute.value = ScheduleJsonData["Sunday"]["OnTime"]["minute"].toString().padStart(2, '0')
        SundayOffHour.value = ScheduleJsonData["Sunday"]["OffTime"]["hour"].toString().padStart(2, '0')
        SundayOffMinute.value = ScheduleJsonData["Sunday"]["OffTime"]["minute"].toString().padStart(2, '0')
        SundayActive.checked = ScheduleJsonData["Sunday"]["Active"]
        
    } 

    function OnLoadSchedule()
    {
        const MondayOnHour = document.getElementById('MondayOnHour');
        const MondayOnMinute = document.getElementById('MondayOnMinute');
        const MondayOffHour = document.getElementById('MondayOffHour');
        const MondayOffMinute = document.getElementById('MondayOffMinute');
        const MondayActive = document.getElementById('MondayActive');
        let monOnHour = 0;
        let monOnMinute = 0;
        let monOffHour = 0;
        let monOffMinute = 0;
        let monOnHour_bak = 0;
        let monOnMinute_bak = 0;
        let monOffHour_bak = 0;
        let monOffMinute_bak = 0;
        
        const TuesdayOnHour = document.getElementById('TuesdayOnHour');
        const TuesdayOnMinute = document.getElementById('TuesdayOnMinute');
        const TuesdayOffHour = document.getElementById('TuesdayOffHour');
        const TuesdayOffMinute = document.getElementById('TuesdayOffMinute');
        const TuesdayActive = document.getElementById('TuesdayActive');
        let tueOnHour = 0;
        let tueOnMinute = 0;
        let tueOffHour = 0;
        let tueOffMinute = 0;
        let tueOnHour_bak = 0;
        let tueOnMinute_bak = 0;
        let tueOffHour_bak = 0;
        let tueOffMinute_bak = 0;
        
        const WednesdayOnHour = document.getElementById('WednesdayOnHour');
        const WednesdayOnMinute = document.getElementById('WednesdayOnMinute');
        const WednesdayOffHour = document.getElementById('WednesdayOffHour');
        const WednesdayOffMinute = document.getElementById('WednesdayOffMinute');
        const WednesdayActive = document.getElementById('WednesdayActive');
        let wedOnHour = 0;
        let wedOnMinute = 0;
        let wedOffHour = 0;
        let wedOffMinute = 0;
        let wedOnHour_bak = 0;
        let wedOnMinute_bak = 0;
        let wedOffHour_bak = 0;
        let wedOffMinute_bak = 0;
        
        const ThursdayOnHour = document.getElementById('ThursdayOnHour');
        const ThursdayOnMinute = document.getElementById('ThursdayOnMinute');
        const ThursdayOffHour = document.getElementById('ThursdayOffHour');
        const ThursdayOffMinute = document.getElementById('ThursdayOffMinute');
        const ThursdayActive = document.getElementById('ThursdayActive');
        let thuOnHour = 0;
        let thuOnMinute = 0;
        let thuOffHour = 0;
        let thuOffMinute = 0;
        let thuOnHour_bak = 0;
        let thuOnMinute_bak = 0;
        let thuOffHour_bak = 0;
        let thuOffMinute_bak = 0;
        
        const FridayOnHour = document.getElementById('FridayOnHour');
        const FridayOnMinute = document.getElementById('FridayOnMinute');
        const FridayOffHour = document.getElementById('FridayOffHour');
        const FridayOffMinute = document.getElementById('FridayOffMinute');
        const FridayActive = document.getElementById('FridayActive');
        let friOnHour = 0;
        let friOnMinute = 0;
        let friOffHour = 0;
        let friOffMinute = 0;
        let friOnHour_bak = 0;
        let friOnMinute_bak = 0;
        let friOffHour_bak = 0;
        let friOffMinute_bak = 0;
        
        const SaturdayOnHour = document.getElementById('SaturdayOnHour');
        const SaturdayOnMinute = document.getElementById('SaturdayOnMinute');
        const SaturdayOffHour = document.getElementById('SaturdayOffHour');
        const SaturdayOffMinute = document.getElementById('SaturdayOffMinute');
        const SaturdayActive = document.getElementById('SaturdayActive');
        let satOnHour = 0;
        let satOnMinute = 0;
        let satOffHour = 0;
        let satOffMinute = 0;
        let satOnHour_bak = 0;
        let satOnMinute_bak = 0;
        let satOffHour_bak = 0;
        let satOffMinute_bak = 0;
        
        const SundayOnHour = document.getElementById('SundayOnHour');
        const SundayOnMinute = document.getElementById('SundayOnMinute');
        const SundayOffHour = document.getElementById('SundayOffHour');
        const SundayOffMinute = document.getElementById('SundayOffMinute');
        const SundayActive = document.getElementById('SundayActive');
        let sunOnHour = 0;
        let sunOnMinute = 0;
        let sunOffHour = 0;
        let sunOffMinute = 0;
        let sunOnHour_bak = 0;
        let sunOnMinute_bak = 0;
        let sunOffHour_bak = 0;
        let sunOffMinute_bak = 0;
        
        MondayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('SundayActiveSlider').style.outline = "3px solid #ff3f05"
                    SundayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOnHour<23)
                    {
                        monOnHour = monOnHour + 1
                    }
                    else
                    {
                        monOnHour = 0
                    }
                    MondayOnHour.value = monOnHour.toString().padStart(2, '0')
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOnHour.style.backgroundColor = blackColor
                    MondayOnMinute.style.backgroundColor = yellowColor
                    MondayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                   if (monOnHour>0)
                   {
                       monOnHour = monOnHour - 1
                   }
                   else
                   {
                       monOnHour = 23
                   }
                   MondayOnHour.value = monOnHour.toString().padStart(2, '0')

                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    MondayOnHour.style.backgroundColor = blueColor;
                    monOnHour = parseInt(MondayOnHour.value);
                    monOnHour_bak = monOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    MondayOnHour.style.backgroundColor = yellowColor;                    
                    ScheduleJsonData["Monday"]["OnTime"]["hour"] = monOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   MondayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   MondayOnHour.style.backgroundColor = yellowColor;
                   MondayOnHour.value = monOnHour_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        MondayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOnMinute.style.backgroundColor = blackColor;
                    MondayOnHour.style.backgroundColor = yellowColor;
                    MondayOnHour.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOnMinute<59)
                    {
                        monOnMinute = monOnMinute + 1
                    }
                    else
                    {
                        monOnMinute = 0
                    }
                    MondayOnMinute.value = monOnMinute.toString().padStart(2, '0')
                    
                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOnMinute.style.backgroundColor = blackColor
                    MondayOffHour.style.backgroundColor = yellowColor
                    MondayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOnMinute>0)
                    {
                        monOnMinute = monOnMinute - 1
                    }
                    else
                    {
                        monOnMinute = 59
                    }
                    MondayOnMinute.value = monOnMinute.toString().padStart(2, '0')
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    MondayOnMinute.style.backgroundColor = blueColor;
                    monOnMinute = parseInt(MondayOnMinute.value);
                    monOnMinute_bak = monOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    MondayOnMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Monday"]["OnTime"]["minute"] = monOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   MondayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   MondayOnMinute.style.backgroundColor = yellowColor;
                   MondayOnMinute.value = monOnMinute_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        MondayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOffHour.style.backgroundColor = blackColor;
                    MondayOnMinute.style.backgroundColor = yellowColor;
                    MondayOnMinute.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOffHour<23)
                    {
                        monOffHour = monOffHour + 1
                    }
                    else
                    {
                        monOffHour = 0
                    }
                    MondayOffHour.value = monOffHour.toString().padStart(2, '0')

                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOffHour.style.backgroundColor = blackColor
                    MondayOffMinute.style.backgroundColor = yellowColor
                    MondayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOffHour>0)
                    {
                        monOffHour = monOffHour - 1
                    }
                    else
                    {
                        monOffHour = 23
                    }
                    MondayOffHour.value = monOffHour.toString().padStart(2, '0')
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    MondayOffHour.style.backgroundColor = blueColor;
                    monOffHour = parseInt(MondayOffHour.value);
                    monOffHour_bak = monOffHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    MondayOffHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Monday"]["OffTime"]["hour"] = monOffHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   MondayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   MondayOffHour.style.backgroundColor = yellowColor;
                   MondayOffHour.value = monOffHour_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        MondayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOffMinute.style.backgroundColor = blackColor;
                    MondayOffHour.style.backgroundColor = yellowColor;
                    MondayOffHour.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOffMinute<59)
                    {
                        monOffMinute = monOffMinute + 1
                    }
                    else
                    {
                        monOffMinute = 0
                    }
                    MondayOffMinute.value = monOffMinute.toString().padStart(2, '0')
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    MondayOffMinute.style.backgroundColor = blackColor;
                    document.getElementById('MondayActiveSlider').style.outline = "3px solid #ff3f05"
                    MondayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (monOffMinute>0)
                    {
                        monOffMinute = monOffMinute - 1
                    }
                    else
                    {
                        monOffMinute = 59
                    }
                    MondayOffMinute.value = monOffMinute.toString().padStart(2, '0')
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    MondayOffMinute.style.backgroundColor = blueColor;
                    monOffMinute = parseInt(MondayOffMinute.value);
                    monOffMinute_bak = monOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    MondayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Monday"]["OffTime"]["minute"] = monOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   MondayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   MondayOffMinute.style.backgroundColor = yellowColor;
                   MondayOffMinute.value = monOffMinute_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        MondayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('MondayActiveSlider').style.outline = "3px solid #000000"
                MondayOffMinute.style.backgroundColor = yellowColor;
                MondayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();
                                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('MondayActiveSlider').style.outline = "3px solid #000000"
                TuesdayOnHour.style.backgroundColor = yellowColor;
                TuesdayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();                
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(MondayActive.checked == true)
                {
                    MondayActive.checked = false;  
                    ScheduleJsonData["Monday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    MondayActive.checked = true;  
                    ScheduleJsonData["Monday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();                            
                document.getElementById('MondayActiveSlider').style.outline = "3px solid #000000"
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;                
            }
        });
        
        TuesdayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('MondayActiveSlider').style.outline = "3px solid #ff3f05"
                    MondayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOnHour<23)
                    {
                        tueOnHour = tueOnHour + 1
                    }
                    else
                    {
                        tueOnHour = 0
                    }
                    TuesdayOnHour.value = tueOnHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOnHour.style.backgroundColor = blackColor
                    TuesdayOnMinute.style.backgroundColor = yellowColor
                    TuesdayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOnHour>0)
                    {
                        tueOnHour = tueOnHour - 1
                    }
                    else
                    {
                        tueOnHour = 23
                    }
                    TuesdayOnHour.value = tueOnHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    TuesdayOnHour.style.backgroundColor = blueColor;
                    tueOnHour =  parseInt(TuesdayOnHour.value);
                    tueOnHour_bak = tueOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    TuesdayOnHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Tuesday"]["OnTime"]["hour"] = tueOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   TuesdayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   TuesdayOnHour.style.backgroundColor = yellowColor;
                   TuesdayOnHour.value = tueOnHour_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        TuesdayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOnMinute.style.backgroundColor = blackColor;
                    TuesdayOnHour.style.backgroundColor = yellowColor;
                    TuesdayOnHour.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOnMinute<59)
                    {
                        tueOnMinute = tueOnMinute + 1
                    }
                    else
                    {
                        tueOnMinute = 0
                    }
                    TuesdayOnMinute.value = tueOnMinute.toString().padStart(2, '0')                    

                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOnMinute.style.backgroundColor = blackColor
                    TuesdayOffHour.style.backgroundColor = yellowColor
                    TuesdayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOnMinute>0)
                    {
                        tueOnMinute = tueOnMinute - 1
                    }
                    else
                    {
                        tueOnMinute = 59
                    }
                    TuesdayOnMinute.value = tueOnMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    TuesdayOnMinute.style.backgroundColor = blueColor;
                    tueOnMinute =  parseInt(TuesdayOnMinute.value);
                    tueOnMinute_bak = tueOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    TuesdayOnMinute.style.backgroundColor = yellowColor
                    ScheduleJsonData["Tuesday"]["OnTime"]["minute"] = tueOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   TuesdayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   TuesdayOnMinute.style.backgroundColor = yellowColor;
                   TuesdayOnMinute.value = tueOnMinute_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        TuesdayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOffHour.style.backgroundColor = blackColor;
                    TuesdayOnMinute.style.backgroundColor = yellowColor;
                    TuesdayOnMinute.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOffHour<23)
                    {
                        tueOffHour = tueOffHour + 1
                    }
                    else
                    {
                        tueOffHour = 0
                    }
                    TuesdayOffHour.value = tueOffHour.toString().padStart(2, '0')                    

                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOffHour.style.backgroundColor = blackColor
                    TuesdayOffMinute.style.backgroundColor = yellowColor
                    TuesdayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOffHour>0)
                    {
                        tueOffHour = tueOffHour - 1
                    }
                    else
                    {
                        tueOffHour = 23
                    }
                    TuesdayOffHour.value = tueOffHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    TuesdayOffHour.style.backgroundColor = blueColor;
                    tueOffHour =  parseInt(TuesdayOffHour.value);
                    tueOffHour_bak = tueOffHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    TuesdayOffHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Tuesday"]["OffTime"]["hour"] = tueOffHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   TuesdayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   TuesdayOffHour.style.backgroundColor = yellowColor;
                   TuesdayOffHour.value = tueOffHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        TuesdayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOffMinute.style.backgroundColor = blackColor;
                    TuesdayOffHour.style.backgroundColor = yellowColor;
                    TuesdayOffHour.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOffMinute<59)
                    {
                        tueOffMinute = tueOffMinute + 1
                    }
                    else
                    {
                        tueOffMinute = 0
                    }
                    TuesdayOffMinute.value = tueOffMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    TuesdayOffMinute.style.backgroundColor = blackColor
                    document.getElementById('TuesdayActiveSlider').style.outline = "3px solid #ff3f05"
                    TuesdayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (tueOffMinute>0)
                    {
                        tueOffMinute = tueOffMinute - 1
                    }
                    else
                    {
                        tueOffMinute = 59
                    }
                    TuesdayOffMinute.value = tueOffMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    TuesdayOffMinute.style.backgroundColor = blueColor;
                    tueOffMinute =  parseInt(TuesdayOffMinute.value);
                    tueOffMinute_bak = tueOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    TuesdayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Tuesday"]["OffTime"]["minute"] = tueOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   TuesdayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   TuesdayOffMinute.style.backgroundColor = yellowColor;
                   TuesdayOffMinute.value = tueOffMinute_bak.toString().padStart(2, '0')   
                }
                else{}
            }
        });
        
        TuesdayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('TuesdayActiveSlider').style.outline = "3px solid #000000"
                TuesdayOffMinute.style.backgroundColor = yellowColor;
                TuesdayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();                              
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('TuesdayActiveSlider').style.outline = "3px solid #000000"
                WednesdayOnHour.style.backgroundColor = yellowColor;
                WednesdayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();                
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(TuesdayActive.checked == true)
                {
                    TuesdayActive.checked = false;  
                    ScheduleJsonData["Tuesday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    TuesdayActive.checked = true;  
                    ScheduleJsonData["Tuesday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('TuesdayActiveSlider').style.outline = "3px solid #000000"
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;
                
            }
        });
        
        WednesdayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('TuesdayActiveSlider').style.outline = "3px solid #ff3f05"
                    TuesdayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOnHour<23)
                    {
                        wedOnHour = wedOnHour + 1
                    }
                    else
                    {
                        wedOnHour = 0
                    }
                    WednesdayOnHour.value = wedOnHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOnHour.style.backgroundColor = blackColor
                    WednesdayOnMinute.style.backgroundColor = yellowColor;
                    WednesdayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOnHour>0)
                    {
                        wedOnHour = wedOnHour - 1
                    }
                    else
                    {
                        wedOnHour = 23
                    }
                    WednesdayOnHour.value = wedOnHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    WednesdayOnHour.style.backgroundColor = blueColor;
                    wedOnHour =  parseInt(WednesdayOnHour.value);
                    wedOnHour_bak = wedOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    WednesdayOnHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Wednesday"]["OnTime"]["hour"] = wedOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   WednesdayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   WednesdayOnHour.style.backgroundColor = yellowColor;
                   WednesdayOnHour.value = wedOnHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        WednesdayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOnMinute.style.backgroundColor = blackColor;
                    WednesdayOnHour.style.backgroundColor = yellowColor;
                    WednesdayOnHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOnMinute<59)
                    {
                        wedOnMinute = wedOnMinute + 1
                    }
                    else
                    {
                        wedOnMinute = 0
                    }
                    WednesdayOnMinute.value = wedOnMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOnMinute.style.backgroundColor = blackColor
                    WednesdayOffHour.style.backgroundColor = yellowColor;
                    WednesdayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOnMinute>0)
                    {
                        wedOnMinute = wedOnMinute - 1
                    }
                    else
                    {
                        wedOnMinute = 59
                    }
                    WednesdayOnMinute.value = wedOnMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    WednesdayOnMinute.style.backgroundColor = blueColor;
                    wedOnMinute = parseInt(WednesdayOnMinute.value);
                    wedOnMinute_bak = wedOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    WednesdayOnMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Wednesday"]["OnTime"]["minute"] = wedOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   WednesdayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   WednesdayOnMinute.style.backgroundColor = yellowColor;
                   WednesdayOnMinute.value = wedOnMinute_bak.toString().padStart(2, '0')  
                }
                else{}
            }
        });
        
        WednesdayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOffHour.style.backgroundColor = blackColor;
                    WednesdayOnMinute.style.backgroundColor = yellowColor;
                    WednesdayOnMinute.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOffHour<23)
                    {
                        wedOffHour = wedOffHour + 1
                    }
                    else
                    {
                        wedOffHour = 0
                    }
                    WednesdayOffHour.value = wedOffHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOffHour.style.backgroundColor = blackColor
                    WednesdayOffMinute.style.backgroundColor = yellowColor;
                    WednesdayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOffHour>0)
                    {
                        wedOffHour = wedOffHour - 1
                    }
                    else
                    {
                        wedOffHour = 23
                    }
                    WednesdayOffHour.value = wedOffHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    WednesdayOffHour.style.backgroundColor = blueColor;
                    wedOffHour = parseInt(WednesdayOffHour.value);
                    wedOffHour_bak = wedOffHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    WednesdayOffHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Wednesday"]["OffTime"]["hour"] = wedOffHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   WednesdayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   WednesdayOffHour.style.backgroundColor = yellowColor;
                   WednesdayOffHour.value = wedOffHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        WednesdayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOffMinute.style.backgroundColor = blackColor;
                    WednesdayOffHour.style.backgroundColor = yellowColor;
                    WednesdayOffHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOffMinute<59)
                    {
                        wedOffMinute = wedOffMinute + 1
                    }
                    else
                    {
                        wedOffMinute = 0
                    }
                    WednesdayOffMinute.value = wedOffMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    WednesdayOffMinute.style.backgroundColor = blackColor
                    document.getElementById('WednesdayActiveSlider').style.outline = "3px solid #ff3f05";
                    WednesdayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (wedOffMinute>0)
                    {
                        wedOffMinute = wedOffMinute - 1
                    }
                    else
                    {
                        wedOffMinute = 59
                    }
                    WednesdayOffMinute.value = wedOffMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    WednesdayOffMinute.style.backgroundColor = blueColor;
                    wedOffMinute = parseInt(WednesdayOffMinute.value);
                    wedOffMinute_bak = wedOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    WednesdayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Wednesday"]["OffTime"]["minute"] = wedOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   WednesdayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   WednesdayOffMinute.style.backgroundColor = yellowColor;
                   WednesdayOffMinute.value = wedOffMinute_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        WednesdayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('WednesdayActiveSlider').style.outline = "3px solid #000000";
                WednesdayOffMinute.style.backgroundColor = yellowColor;
                WednesdayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();                              
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('WednesdayActiveSlider').style.outline = "3px solid #000000";
                ThursdayOnHour.style.backgroundColor = yellowColor;
                ThursdayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();                
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(WednesdayActive.checked == true)
                {
                    WednesdayActive.checked = false;  
                    ScheduleJsonData["Wednesday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    WednesdayActive.checked = true;  
                    ScheduleJsonData["Wednesday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('WednesdayActiveSlider').style.outline = "3px solid #000000";
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;
                
            }
        });
        
        ThursdayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('WednesdayActiveSlider').style.outline = "3px solid #ff3f05";
                    WednesdayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (thuOnHour<23)
                    {
                        thuOnHour = thuOnHour + 1
                    }
                    else
                    {
                        thuOnHour = 0
                    }
                    ThursdayOnHour.value = thuOnHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOnHour.style.backgroundColor = blackColor
                    ThursdayOnMinute.style.backgroundColor = yellowColor;
                    ThursdayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                   if (thuOnHour>0)
                   {
                       thuOnHour = thuOnHour - 1
                   }
                   else
                   {
                       thuOnHour = 23
                   }
                   ThursdayOnHour.value = thuOnHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    ThursdayOnHour.style.backgroundColor = blueColor;
                    thuOnHour = parseInt(ThursdayOnHour.value);
                    thuOnHour_bak = thuOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    ThursdayOnHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Thursday"]["OnTime"]["hour"] = thuOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   ThursdayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   ThursdayOnHour.style.backgroundColor = yellowColor;
                   ThursdayOnHour.value = thuOnHour.toString().padStart(2, '0')   
                }
                else{}
            }
        });
        
        ThursdayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOnMinute.style.backgroundColor = blackColor;
                    ThursdayOnHour.style.backgroundColor = yellowColor;
                    ThursdayOnHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (thuOnMinute<59)
                    {
                        thuOnMinute = thuOnMinute + 1
                    }
                    else
                    {
                        thuOnMinute = 0
                    }
                    ThursdayOnMinute.value = thuOnMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOnMinute.style.backgroundColor = blackColor
                    ThursdayOffHour.style.backgroundColor = yellowColor;
                    ThursdayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                   if (thuOnMinute>0)
                   {
                       thuOnMinute = thuOnMinute - 1
                   }
                   else
                   {
                       thuOnMinute = 59
                   }
                   ThursdayOnMinute.value = thuOnMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    ThursdayOnMinute.style.backgroundColor = blueColor;
                    thuOnMinute = parseInt(ThursdayOnMinute.value);
                    thuOnMinute_bak = thuOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    ThursdayOnMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Thursday"]["OnTime"]["minute"] = thuOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   ThursdayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   ThursdayOnMinute.style.backgroundColor = yellowColor;
                   ThursdayOnMinute.value = thuOnMinute_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        ThursdayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOffHour.style.backgroundColor = blackColor;
                    ThursdayOnMinute.style.backgroundColor = yellowColor;
                    ThursdayOnMinute.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (thuOffHour<23)
                    {
                        thuOffHour = thuOffHour + 1
                    }
                    else
                    {
                        thuOffHour = 0
                    }
                    ThursdayOffHour.value = thuOffHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOffHour.style.backgroundColor = blackColor
                    ThursdayOffMinute.style.backgroundColor = yellowColor;
                    ThursdayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (thuOffHour>0)
                    {
                        thuOffHour = thuOffHour - 1
                    }
                    else
                    {
                        thuOffHour = 23
                    }
                    ThursdayOffHour.value = thuOffHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    ThursdayOffHour.style.backgroundColor = blueColor;
                    thuOffHour = parseInt(ThursdayOffHour.value);
                    thuOffHour_bak = thuOffHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    ThursdayOffHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Thursday"]["OffTime"]["hour"] = thuOffHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   ThursdayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   ThursdayOffHour.style.backgroundColor = yellowColor;
                   ThursdayOffHour.value = thuOffHour_bak.toString().padStart(2, '0')  
                }
                else{}
            }
        });
        
        ThursdayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOffMinute.style.backgroundColor = blackColor;
                    ThursdayOffHour.style.backgroundColor = yellowColor;
                    ThursdayOffHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (thuOffMinute<59)
                    {
                        thuOffMinute = thuOffMinute + 1
                    }
                    else
                    {
                        thuOffMinute = 0
                    }
                    ThursdayOffMinute.value = thuOffMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    ThursdayOffMinute.style.backgroundColor = blackColor
                    document.getElementById('ThursdayActiveSlider').style.outline = "3px solid #ff3f05";
                    ThursdayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (thuOffMinute>0)
                    {
                        thuOffMinute = thuOffMinute - 1
                    }
                    else
                    {
                        thuOffMinute = 59
                    }
                    ThursdayOffMinute.value = thuOffMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    ThursdayOffMinute.style.backgroundColor = blueColor;
                    thuOffMinute = parseInt(ThursdayOffMinute.value);
                    thuOffMinute_bak = thuOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    ThursdayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Thursday"]["OffTime"]["minute"] = thuOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   ThursdayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   ThursdayOffMinute.style.backgroundColor = yellowColor;
                   ThursdayOffMinute.value = thuOffMinute_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        ThursdayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('ThursdayActiveSlider').style.outline = "3px solid #000000";
                ThursdayOffMinute.style.backgroundColor = yellowColor;
                ThursdayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();                               
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('ThursdayActiveSlider').style.outline = "3px solid #000000";
                FridayOnHour.style.backgroundColor = yellowColor;
                FridayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();                
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(ThursdayActive.checked == true)
                {
                    ThursdayActive.checked = false;  
                    ScheduleJsonData["Thursday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    ThursdayActive.checked = true;  
                    ScheduleJsonData["Thursday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }                
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('ThursdayActiveSlider').style.outline = "3px solid #000000";
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;
                
            }
        });
        
        FridayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('ThursdayActiveSlider').style.outline = "3px solid #ff3f05";
                    ThursdayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (friOnHour<23)
                    {
                        friOnHour = friOnHour + 1
                    }
                    else
                    {
                        friOnHour = 0
                    }
                    FridayOnHour.value = friOnHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOnHour.style.backgroundColor = blackColor
                    FridayOnMinute.style.backgroundColor = yellowColor;
                    FridayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                   if (friOnHour>0)
                   {
                       friOnHour = friOnHour - 1
                   }
                   else
                   {
                       friOnHour = 23
                   }
                   FridayOnHour.value = friOnHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    FridayOnHour.style.backgroundColor = blueColor;
                    friOnHour = parseInt(FridayOnHour.value);
                    friOnHour_bak = friOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    FridayOnHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Friday"]["OnTime"]["hour"] = friOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   FridayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   FridayOnHour.style.backgroundColor = yellowColor;
                   FridayOnHour.value = friOnHour_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        FridayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOnMinute.style.backgroundColor = blackColor;
                    FridayOnHour.style.backgroundColor = yellowColor;
                    FridayOnHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (friOnMinute<59)
                    {
                        friOnMinute = friOnMinute + 1
                    }
                    else
                    {
                        friOnMinute = 0
                    }
                    FridayOnMinute.value = friOnMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOnMinute.style.backgroundColor = blackColor
                    FridayOffHour.style.backgroundColor = yellowColor;
                    FridayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                   if (friOnMinute>0)
                   {
                       friOnMinute = friOnMinute - 1
                   }
                   else
                   {
                       friOnMinute = 59
                   }
                   FridayOnMinute.value = friOnMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    FridayOnMinute.style.backgroundColor = blueColor;
                    friOnMinute = parseInt(FridayOnMinute.value);
                    friOnMinute_bak = friOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    FridayOnMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Friday"]["OnTime"]["minute"] = friOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)}); 
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   FridayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   FridayOnMinute.style.backgroundColor = yellowColor;
                   FridayOnMinute.value = friOnMinute_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        FridayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOffHour.style.backgroundColor = blackColor;
                    FridayOnMinute.style.backgroundColor = yellowColor;
                    FridayOnMinute.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (friOffHour<23)
                    {
                        friOffHour = friOffHour + 1
                    }
                    else
                    {
                        friOffHour = 0
                    }
                    FridayOffHour.value = friOffHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOffHour.style.backgroundColor = blackColor
                    FridayOffMinute.style.backgroundColor = yellowColor;
                    FridayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (friOffHour>0)
                    {
                        friOffHour = friOffHour - 1
                    }
                    else
                    {
                        friOffHour = 23
                    }
                    FridayOffHour.value = friOffHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    FridayOffHour.style.backgroundColor = blueColor;
                    friOffHour = parseInt(FridayOffHour.value);
                    friOffHour_bak = friOffHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    FridayOffHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Friday"]["OffTime"]["hour"] = friOffHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   FridayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   FridayOffHour.style.backgroundColor = yellowColor;
                   FridayOffHour.value = friOffHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        FridayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOffMinute.style.backgroundColor = blackColor;
                    FridayOffHour.style.backgroundColor = yellowColor;
                    FridayOffHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (friOffMinute<59)
                    {
                        friOffMinute = friOffMinute + 1
                    }
                    else
                    {
                        friOffMinute = 0
                    }
                    FridayOffMinute.value = friOffMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    FridayOffMinute.style.backgroundColor = blackColor
                    document.getElementById('FridayActiveSlider').style.outline = "3px solid #ff3f05";
                    FridayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (friOffMinute>0)
                    {
                        friOffMinute = friOffMinute - 1
                    }
                    else
                    {
                        friOffMinute = 59
                    }
                    FridayOffMinute.value = friOffMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    FridayOffMinute.style.backgroundColor = blueColor;
                    friOffMinute = parseInt(FridayOffMinute.value);
                    friOffMinute_bak = friOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    FridayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Friday"]["OffTime"]["minute"] = friOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   FridayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   FridayOffMinute.style.backgroundColor = yellowColor;
                   FridayOffMinute.value = friOffMinute_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        FridayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('FridayActiveSlider').style.outline = "3px solid #000000";
                FridayOffMinute.style.backgroundColor = yellowColor;
                FridayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();                             
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('FridayActiveSlider').style.outline = "3px solid #000000";
                SaturdayOnHour.style.backgroundColor = yellowColor;
                SaturdayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();                
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(FridayActive.checked == true)
                {
                    FridayActive.checked = false;  
                    ScheduleJsonData["Friday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    FridayActive.checked = true;  
                    ScheduleJsonData["Friday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('FridayActiveSlider').style.outline = "3px solid #000000";
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;
                
            }
        });
        
        SaturdayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('FridayActiveSlider').style.outline = "3px solid #ff3f05";
                    FridayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (satOnHour<23)
                    {
                        satOnHour = satOnHour + 1
                    }
                    else
                    {
                        satOnHour = 0
                    }
                    SaturdayOnHour.value = satOnHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOnHour.style.backgroundColor = blackColor
                    SaturdayOnMinute.style.backgroundColor = yellowColor;
                    SaturdayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                   if (satOnHour>0)
                   {
                       satOnHour = satOnHour - 1
                   }
                   else
                   {
                       satOnHour = 23
                   }
                   SaturdayOnHour.value = satOnHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SaturdayOnHour.style.backgroundColor = blueColor;
                    satOnHour = parseInt(SaturdayOnHour.value);
                    satOnHour_bak = satOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SaturdayOnHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Saturday"]["OnTime"]["hour"] = satOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SaturdayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SaturdayOnHour.style.backgroundColor = yellowColor;
                   SaturdayOnHour.value = satOnHour.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        SaturdayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOnMinute.style.backgroundColor = blackColor;
                    SaturdayOnHour.style.backgroundColor = yellowColor;
                    SaturdayOnHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                     if (satOnMinute<59)
                    {
                        satOnMinute = satOnMinute + 1
                    }
                    else
                    {
                        satOnMinute = 0
                    }
                    SaturdayOnMinute.value = satOnMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOnMinute.style.backgroundColor = blackColor
                    SaturdayOffHour.style.backgroundColor = yellowColor;
                    SaturdayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (satOnMinute>0)
                    {
                        satOnMinute = satOnMinute - 1
                    }
                    else
                    {
                        satOnMinute = 59
                    }
                    SaturdayOnMinute.value = satOnMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SaturdayOnMinute.style.backgroundColor = blueColor;
                    satOnMinute = parseInt(SaturdayOnMinute.value);
                    satOnMinute_bak = satOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SaturdayOnMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Saturday"]["OnTime"]["minute"] = satOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SaturdayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SaturdayOnMinute.style.backgroundColor = yellowColor;
                   SaturdayOnMinute.value = satOnMinute_bak.toString().padStart(2, '0')  
                }
                else{}
            }
        });
        
        SaturdayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOffHour.style.backgroundColor = blackColor;
                    SaturdayOnMinute.style.backgroundColor = yellowColor;
                    SaturdayOnMinute.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (satOffHour<23)
                    {
                        satOffHour = satOffHour + 1
                    }
                    else
                    {
                        satOffHour = 0
                    }
                    SaturdayOffHour.value = satOffHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOffHour.style.backgroundColor = blackColor
                    SaturdayOffMinute.style.backgroundColor = yellowColor;
                    SaturdayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (satOffHour>0)
                    {
                        satOffHour = satOffHour - 1
                    }
                    else
                    {
                        satOffHour = 23
                    }
                    SaturdayOffHour.value = satOffHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SaturdayOffHour.style.backgroundColor = blueColor;
                    satOffHour = parseInt(SaturdayOffHour.value);
                    satOffHour_bak = satOffHour;
                }
                else
                {
                   currentMenu.setState("hidden")
                   SaturdayOffHour.style.backgroundColor = yellowColor;
                   ScheduleJsonData["Saturday"]["OffTime"]["hour"] = satOffHour
                   bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)}); 
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SaturdayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SaturdayOffHour.style.backgroundColor = yellowColor;
                   SaturdayOffHour.value = satOffHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        SaturdayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOffMinute.style.backgroundColor = blackColor;
                    SaturdayOffHour.style.backgroundColor = yellowColor;
                    SaturdayOffHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (satOffMinute<59)
                    {
                        satOffMinute = satOffMinute + 1
                    }
                    else
                    {
                        satOffMinute = 0
                    }
                    SaturdayOffMinute.value = satOffMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SaturdayOffMinute.style.backgroundColor = blackColor
                    document.getElementById('SaturdayActiveSlider').style.outline = "3px solid #ff3f05";
                    SaturdayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (satOffMinute>0)
                    {
                        satOffMinute = satOffMinute - 1
                    }
                    else
                    {
                        satOffMinute = 59
                    }
                    SaturdayOffMinute.value = satOffMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SaturdayOffMinute.style.backgroundColor = blueColor;
                    satOffMinute = parseInt(SaturdayOffMinute.value);
                    satOffMinute_bak = satOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SaturdayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Saturday"]["OffTime"]["minute"] = satOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SaturdayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SaturdayOffMinute.style.backgroundColor = yellowColor;
                   SaturdayOffMinute.value = satOffMinute_bak.toString().padStart(2, '0')
                }
                else{}
            }
        });
        
        SaturdayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('SaturdayActiveSlider').style.outline = "3px solid #000000";
                SaturdayOffMinute.style.backgroundColor = yellowColor;
                SaturdayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();                             
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('SaturdayActiveSlider').style.outline = "3px solid #000000";
                SundayOnHour.style.backgroundColor = yellowColor;
                SundayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();                
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(SaturdayActive.checked == true)
                {
                    SaturdayActive.checked = false;  
                    ScheduleJsonData["Saturday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    SaturdayActive.checked = true;  
                    ScheduleJsonData["Saturday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('SaturdayActiveSlider').style.outline = "3px solid #000000";
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;
                
            }
        });
        
        SundayOnHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOnHour.style.backgroundColor = blackColor;
                    document.getElementById('SaturdayActiveSlider').style.outline = "3px solid #ff3f05";
                    SaturdayActive.focus();
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOnHour<23)
                    {
                        sunOnHour = sunOnHour + 1
                    }
                    else
                    {
                        sunOnHour = 0
                    }
                    SundayOnHour.value = sunOnHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOnHour.style.backgroundColor = blackColor
                    SundayOnMinute.style.backgroundColor = yellowColor;
                    SundayOnMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOnHour>0)
                    {
                        sunOnHour = sunOnHour - 1
                    }
                    else
                    {
                        sunOnHour = 23
                    }
                    SundayOnHour.value = sunOnHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SundayOnHour.style.backgroundColor = blueColor;
                    sunOnHour = parseInt(SundayOnHour.value);
                    sunOnHour_bak = sunOnHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SundayOnHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Sunday"]["OnTime"]["hour"] = sunOnHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SundayOnHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SundayOnHour.style.backgroundColor = yellowColor;
                   SundayOnHour.value = sunOnHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        SundayOnMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOnMinute.style.backgroundColor = blackColor;
                    SundayOnHour.style.backgroundColor = yellowColor;
                    SundayOnHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOnMinute<59)
                    {
                        sunOnMinute = sunOnMinute + 1
                    }
                    else
                    {
                        sunOnMinute = 0
                    }
                    SundayOnMinute.value = sunOnMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOnMinute.style.backgroundColor = blackColor
                    SundayOffHour.style.backgroundColor = yellowColor;
                    SundayOffHour.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOnMinute>0)
                    {
                        sunOnMinute = sunOnMinute - 1
                    }
                    else
                    {
                        sunOnMinute = 59
                    }
                    SundayOnMinute.value = sunOnMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SundayOnMinute.style.backgroundColor = blueColor;
                    sunOnMinute = parseInt(SundayOnMinute.value);
                    sunOnMinute_bak = sunOnMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SundayOnMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Sunday"]["OnTime"]["minute"] = sunOnMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SundayOnMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SundayOnMinute.style.backgroundColor = yellowColor;
                   SundayOnMinute.value = sunOnMinute_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        SundayOffHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOffHour.style.backgroundColor = blackColor;
                    SundayOnMinute.style.backgroundColor = yellowColor;
                    SundayOnMinute.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOffHour<23)
                    {
                        sunOffHour = sunOffHour + 1
                    }
                    else
                    {
                        sunOffHour = 0
                    }
                    SundayOffHour.value = sunOffHour.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOffHour.style.backgroundColor = blackColor
                    SundayOffMinute.style.backgroundColor = yellowColor;
                    SundayOffMinute.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOffHour>0)
                    {
                        sunOffHour = sunOffHour - 1
                    }
                    else
                    {
                        sunOffHour = 23
                    }
                    SundayOffHour.value = sunOffHour.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SundayOffHour.style.backgroundColor = blueColor;
                    sunOffHour = parseInt(SundayOffHour.value);
                    sunOffHour_bak = sunOffHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SundayOffHour.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Sunday"]["OffTime"]["hour"] = sunOffHour
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SundayOffHour.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SundayOffHour.style.backgroundColor = yellowColor;
                   SundayOffHour.value = sunOffHour_bak.toString().padStart(2, '0') 
                }
                else{}
            }
        });
        
        SundayOffMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOffMinute.style.backgroundColor = blackColor;
                    SundayOffHour.style.backgroundColor = yellowColor;
                    SundayOffHour.focus()
                    currentMenu = currentMenu.getLeftSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOffMinute<59)
                    {
                        sunOffMinute = sunOffMinute + 1
                    }
                    else
                    {
                        sunOffMinute = 0
                    }
                    SundayOffMinute.value = sunOffMinute.toString().padStart(2, '0')                    
                }
                else{}                
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    SundayOffMinute.style.backgroundColor = blackColor
                    document.getElementById('SundayActiveSlider').style.outline = "3px solid #ff3f05";
                    SundayActive.focus()
                    currentMenu = currentMenu.getRightSibling();
                }
                else if(currentMenu.state == "visible")
                {
                    if (sunOffMinute>0)
                    {
                        sunOffMinute = sunOffMinute - 1
                    }
                    else
                    {
                        sunOffMinute = 59
                    }
                    SundayOffMinute.value = sunOffMinute.toString().padStart(2, '0')                    
                }
                else{}
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    SundayOffMinute.style.backgroundColor = blueColor;
                    sunOffMinute = parseInt(SundayOffMinute.value);
                    sunOffMinute_bak = sunOffMinute;
                }
                else
                {
                    currentMenu.setState("hidden")
                    SundayOffMinute.style.backgroundColor = yellowColor;
                    ScheduleJsonData["Sunday"]["OffTime"]["minute"] = sunOffMinute
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                   SundayOffMinute.style.backgroundColor = blackColor;
                   document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                   document.getElementById('MenuItemDiv').style.visibility = "visible";
                   document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                   document.getElementById('MenuItem2Div').focus()
                   document.getElementById('MenuStatusLabel').textContent = "Menu";
                   currentMenu = currentMenu.parent;
                }
                else if(currentMenu.state == "visible")
                {
                   currentMenu.setState("hidden")
                   SundayOffMinute.style.backgroundColor = yellowColor;
                   SundayOffMinute.value = sunOffMinute_bak.toString().padStart(2, '0')  
                }
                else{}
            }
        });
        
        SundayActive.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                document.getElementById('SundayActiveSlider').style.outline = "3px solid #000000";
                SundayOffMinute.style.backgroundColor = yellowColor;
                SundayOffMinute.focus();
                currentMenu = currentMenu.getLeftSibling();                              
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                document.getElementById('SundayActiveSlider').style.outline = "3px solid #000000";
                MondayOnHour.style.backgroundColor = yellowColor;
                MondayOnHour.focus()
                currentMenu = currentMenu.getRightSibling();               
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(SundayActive.checked == true)
                {
                    SundayActive.checked = false;  
                    ScheduleJsonData["Sunday"]["Active"] = false;
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
                else
                {
                    SundayActive.checked = true;  
                    ScheduleJsonData["Sunday"]["Active"] = true;                         
                    bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
                }
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('SundayActiveSlider').style.outline = "3px solid #000000";
                document.getElementById('scheduleMenu').style.visibility = "hidden";                 
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem2Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem2Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;
                
            }
        });
    }
    
    
    
    
    function OnLoadTimeMenu()
    {
        const DateYear = document.getElementById('DateYear');
        const DateMonth = document.getElementById('DateMonth');
        const DateDay = document.getElementById('DateDay');
        const TimeHour = document.getElementById('TimeHour');
        const TimeMinute = document.getElementById('TimeMinute');
        const TimeSecond = document.getElementById('TimeSecond');
        let tempYear = 0;
        let tempMonth = 0;
        let tempDay = 0;
        let tempHour = 0;
        let tempMinute = 0;
        let tempSecond = 0;
        let tempYearBak = 0;
        let tempMonthBak = 0;
        let tempDayBak = 0;
        let tempHourBak = 0;
        let tempMinuteBak = 0;
        let tempSecondBak = 0;
        
        
        DateYear.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                document.getElementById('DateYear').style.backgroundColor = blackColor;
                document.getElementById('TimeSecond').style.backgroundColor = yellowColor;
                document.getElementById('TimeSecond').focus();
                currentMenu = currentMenu.getLeftSibling(); 
              }
              else if(currentMenu.state == "visible")
              {
                    if (tempYear<2050)
                    {
                        tempYear = tempYear + 1
                    }
                    else
                    {
                        tempYear = 1999
                    }
                    DateYear.value = tempYear.toString().padStart(4, '0')
              }
              else{}
              
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();
               if(currentMenu.state == "hidden")
               {
                  document.getElementById('DateYear').style.backgroundColor = blackColor;
                  document.getElementById('DateMonth').style.backgroundColor = yellowColor;
                  document.getElementById('DateMonth').focus()
                  currentMenu = currentMenu.getRightSibling(); 
               }
               else if(currentMenu.state == "visible")
               {
                   if (tempYear>1998)
                   {
                       tempYear = tempYear - 1
                   }
                   else
                   {
                       tempYear = 2050
                   }
                   DateYear.value = tempYear.toString().padStart(4, '0')
               }
               else{}
              
              
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    document.getElementById('DateYear').style.backgroundColor = blueColor
                    tempYear = parseInt(DateYear.value);
                    tempYearBak = tempYear;
                }
                else
                {
                    currentMenu.setState("hidden")
                    document.getElementById('DateYear').style.backgroundColor = yellowColor;
                    updateSystemDateTime()
                }
                    
            }
            else if (e.key === 'Escape') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                 document.getElementById('DateYear').style.backgroundColor = blackColor;
                 document.getElementById('dateTimeMenu').style.visibility = "hidden";                 
                 document.getElementById('MenuItemDiv').style.visibility = "visible";
                 document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
                 document.getElementById('MenuItem3Div').focus()
                 document.getElementById('MenuStatusLabel').textContent = "Menu";
                 currentMenu = currentMenu.parent;
                 bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
              }
              else if(currentMenu.state == "visible")
              {
                 currentMenu.setState("hidden")
                 document.getElementById('DateYear').style.backgroundColor = yellowColor;
                 DateYear.value = tempYearBak.toString().padStart(4, '0')
              }
              else{}
              
            }
        });
        
        DateMonth.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                document.getElementById('DateMonth').style.backgroundColor = blackColor;
                document.getElementById('DateYear').style.backgroundColor = yellowColor;
                document.getElementById('DateYear').focus();
                currentMenu = currentMenu.getLeftSibling(); 
              }
              else if(currentMenu.state == "visible")
              {
                    if (tempMonth<12)
                    {
                        tempMonth = tempMonth + 1
                    }
                    else
                    {
                        tempMonth = 1
                    }
                    DateMonth.value = tempMonth.toString().padStart(2, '0')
              }
              else{}
              
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();
               if(currentMenu.state == "hidden")
               {
                  document.getElementById('DateMonth').style.backgroundColor = blackColor;
                  document.getElementById('DateDay').style.backgroundColor = yellowColor;
                  document.getElementById('DateDay').focus()
                  currentMenu = currentMenu.getRightSibling(); 
               }
               else if(currentMenu.state == "visible")
               {
                   if (tempMonth>1)
                   {
                       tempMonth = tempMonth - 1
                   }
                   else
                   {
                       tempMonth = 12
                   }
                   DateMonth.value = tempMonth.toString().padStart(2, '0')
               }
               else{}
              
              
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    document.getElementById('DateMonth').style.backgroundColor = blueColor; 
                    tempMonth = parseInt(DateMonth.value);
                    tempMonthBak = tempMonth;
                }
                else
                {
                    currentMenu.setState("hidden")
                    document.getElementById('DateMonth').style.backgroundColor = yellowColor;
                    updateSystemDateTime()
                }
                    
            }
            else if (e.key === 'Escape') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                 document.getElementById('DateMonth').style.backgroundColor = blackColor;
                 document.getElementById('dateTimeMenu').style.visibility = "hidden";
                 document.getElementById('MenuItemDiv').style.visibility = "visible";
                 document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
                 document.getElementById('MenuItem3Div').focus()
                 document.getElementById('MenuStatusLabel').textContent = "Menu";
                 currentMenu = currentMenu.parent;
                 bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
              }
              else if(currentMenu.state == "visible")
              {
                 currentMenu.setState("hidden")
                 document.getElementById('DateMonth').style.backgroundColor = yellowColor;
                 DateMonth.value = tempMonthBak.toString().padStart(2, '0')
              }
              else{}
              
            }
        });
        
        DateDay.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                document.getElementById('DateDay').style.backgroundColor =blackColor;
                document.getElementById('DateMonth').style.backgroundColor = yellowColor;
                document.getElementById('DateMonth').focus();
                currentMenu = currentMenu.getLeftSibling(); 
              }
              else if(currentMenu.state == "visible")
              {
                    let year = parseInt(DateYear.value)
                    let month = parseInt(DateMonth.value)
                    let maxDay = 31
                    if(month == 2)
                    {
                        maxDay =new Date(year, 2, 0).getDate();
                    }
                    if (tempDay<maxDay)
                    {
                        tempDay = tempDay + 1
                    }
                    else
                    {
                        tempDay = 1
                    }
                    DateDay.value = tempDay.toString().padStart(2, '0')  
              }
              else{}
              
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();
               if(currentMenu.state == "hidden")
               {
                  document.getElementById('DateDay').style.backgroundColor = blackColor;
                  document.getElementById('TimeHour').style.backgroundColor = yellowColor;
                  document.getElementById('TimeHour').focus()
                  currentMenu = currentMenu.getRightSibling(); 
               }
               else if(currentMenu.state == "visible")
               {
                    let year = parseInt(DateYear.value)
                    let month = parseInt(DateMonth.value)
                    let maxDay = 31
                    if(month == 2)
                    {
                        maxDay =new Date(year, 2, 0).getDate();
                    }
                    if (tempDay>1)
                   {
                       tempDay = tempDay - 1
                   }
                   else
                   {
                       tempDay = maxDay
                   }
                   DateDay.value = tempDay.toString().padStart(2, '0')
               }
               else{}             
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    document.getElementById('DateDay').style.backgroundColor = blueColor;
                    tempDay = parseInt(DateDay.value);
                    tempDayBak = tempDay;
                }
                else
                {
                    currentMenu.setState("hidden")
                    document.getElementById('DateDay').style.backgroundColor = yellowColor;
                    updateSystemDateTime()
                }
                    
            }
            else if (e.key === 'Escape') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                 document.getElementById('DateDay').style.backgroundColor = blackColor;
                 document.getElementById('dateTimeMenu').style.visibility = "hidden";
                 document.getElementById('MenuItemDiv').style.visibility = "visible";
                 document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
                 document.getElementById('MenuItem3Div').focus()
                 document.getElementById('MenuStatusLabel').textContent = "Menu";
                 currentMenu = currentMenu.parent;
                 bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
              }
              else if(currentMenu.state == "visible")
              {
                 currentMenu.setState("hidden")
                 document.getElementById('DateDay').style.backgroundColor = yellowColor;
                 DateDay.value = tempDayBak.toString().padStart(2, '0')
              }
              else{}
              
            }
        });
       
        TimeHour.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                document.getElementById('TimeHour').style.backgroundColor = blackColor;
                document.getElementById('DateDay').style.backgroundColor = yellowColor;
                document.getElementById('DateDay').focus();
                currentMenu = currentMenu.getLeftSibling(); 
              }
              else if(currentMenu.state == "visible")
              {
                    if (tempHour<23)
                    {
                        tempHour = tempHour + 1
                    }
                    else
                    {
                        tempHour = 0
                    }
                    TimeHour.value = tempHour.toString().padStart(2, '0')
              }
              else{}
              
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();
               if(currentMenu.state == "hidden")
               {
                  document.getElementById('TimeHour').style.backgroundColor = blackColor;
                  document.getElementById('TimeMinute').style.backgroundColor = yellowColor;
                  document.getElementById('TimeMinute').focus()
                  currentMenu = currentMenu.getRightSibling(); 
               }
               else if(currentMenu.state == "visible")
               {
                   if (tempHour>0)
                   {
                       tempHour = tempHour - 1
                   }
                   else
                   {
                       tempHour = 23
                   }
                   TimeHour.value = tempHour.toString().padStart(2, '0')
               }
               else{}
              
              
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    document.getElementById('TimeHour').style.backgroundColor = blueColor;
                    tempHour = parseInt(TimeHour.value);
                    tempHourBak = tempHour;
                }
                else
                {
                    currentMenu.setState("hidden")
                    document.getElementById('TimeHour').style.backgroundColor = yellowColor;
                    updateSystemDateTime()
                }
                    
            }
            else if (e.key === 'Escape') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                 document.getElementById('TimeHour').style.backgroundColor = blackColor;
                 document.getElementById('dateTimeMenu').style.visibility = "hidden";
                 document.getElementById('MenuItemDiv').style.visibility = "visible";
                 document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
                 document.getElementById('MenuItem3Div').focus()
                 document.getElementById('MenuStatusLabel').textContent = "Menu";
                 currentMenu = currentMenu.parent;
                 bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
              }
              else if(currentMenu.state == "visible")
              {
                 currentMenu.setState("hidden")
                 document.getElementById('TimeHour').style.backgroundColor = yellowColor;
                 TimeHour.value = tempHourBak.toString().padStart(2, '0')
              }
              else{}
              
            }
        });
        
        TimeMinute.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                document.getElementById('TimeMinute').style.backgroundColor = blackColor;
                document.getElementById('TimeHour').style.backgroundColor = yellowColor;
                document.getElementById('TimeHour').focus();
                currentMenu = currentMenu.getLeftSibling(); 
              }
              else if(currentMenu.state == "visible")
              {
                    if (tempMinute<59)
                    {
                        tempMinute = tempMinute + 1
                    }
                    else
                    {
                        tempMinute = 0
                    }
                    TimeMinute.value = tempMinute.toString().padStart(2, '0')
              }
              else{}
              
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();
               if(currentMenu.state == "hidden")
               {
                  document.getElementById('TimeMinute').style.backgroundColor = blackColor;
                  document.getElementById('TimeSecond').style.backgroundColor = yellowColor;
                  document.getElementById('TimeSecond').focus()
                  currentMenu = currentMenu.getRightSibling(); 
               }
               else if(currentMenu.state == "visible")
               {
                   if (tempMinute>0)
                   {
                       tempMinute = tempMinute - 1
                   }
                   else
                   {
                       tempMinute = 59
                   }
                   TimeMinute.value = tempMinute.toString().padStart(2, '0')
               }
               else{}
              
              
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    document.getElementById('TimeMinute').style.backgroundColor = blueColor;
                    tempMinute = parseInt(TimeMinute.value);
                    tempMinuteBak = tempMinute;
                }
                else
                {
                   currentMenu.setState("hidden")
                   document.getElementById('TimeMinute').style.backgroundColor = yellowColor; 
                   updateSystemDateTime()
                }
                    
            }
            else if (e.key === 'Escape') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                 document.getElementById('TimeMinute').style.backgroundColor = blackColor;
                 document.getElementById('dateTimeMenu').style.visibility = "hidden";
                 document.getElementById('MenuItemDiv').style.visibility = "visible";
                 document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
                 document.getElementById('MenuItem3Div').focus()
                 document.getElementById('MenuStatusLabel').textContent = "Menu";
                 currentMenu = currentMenu.parent;
                 bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
              }
              else if(currentMenu.state == "visible")
              {
                 currentMenu.setState("hidden")
                 document.getElementById('TimeMinute').style.backgroundColor = yellowColor;
                 TimeMinute.value = tempMinuteBak.toString().padStart(2, '0')
              }
              else{}
              
            }
        });
        
        TimeSecond.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                document.getElementById('TimeSecond').style.backgroundColor = blackColor;
                document.getElementById('TimeMinute').style.backgroundColor = yellowColor;
                document.getElementById('TimeMinute').focus();
                currentMenu = currentMenu.getLeftSibling(); 
              }
              else if(currentMenu.state == "visible")
              {
                    if (tempSecond<59)
                    {
                        tempSecond = tempSecond + 1
                    }
                    else
                    {
                        tempSecond = 0
                    }
                    TimeSecond.value = tempSecond.toString().padStart(2, '0')
              }
              else{}
              
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();
               if(currentMenu.state == "hidden")
               {
                  document.getElementById('TimeSecond').style.backgroundColor = blackColor;
                  document.getElementById('DateYear').style.backgroundColor = yellowColor;
                  document.getElementById('DateYear').focus()
                  currentMenu = currentMenu.getRightSibling(); 
               }
               else if(currentMenu.state == "visible")
               {
                   if (tempSecond>0)
                   {
                       tempSecond = tempSecond - 1
                   }
                   else
                   {
                       tempSecond = 59
                   }
                   TimeSecond.value = tempSecond.toString().padStart(2, '0')
               }
               else{}              
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                if(currentMenu.state == "hidden")
                {
                    currentMenu.setState("visible")
                    document.getElementById('TimeSecond').style.backgroundColor = blueColor;
                    tempSecond = parseInt(TimeSecond.value);
                    tempSecondBak = tempSecond;
                }
                else
                {
                    currentMenu.setState("hidden")
                    document.getElementById('TimeSecond').style.backgroundColor = yellowColor;
                    updateSystemDateTime()
                }
                    
            }
            else if (e.key === 'Escape') {
              e.preventDefault();
              if(currentMenu.state == "hidden")
              {
                 document.getElementById('TimeSecond').style.backgroundColor = blackColor;
                 document.getElementById('dateTimeMenu').style.visibility = "hidden";
                 document.getElementById('MenuItemDiv').style.visibility = "visible";
                 document.getElementById('MenuItem3Div').style.backgroundColor = yellowColor
                 document.getElementById('MenuItem3Div').focus()
                 document.getElementById('MenuStatusLabel').textContent = "Menu";
                 currentMenu = currentMenu.parent;
                 bsMessagePort.PostBSMessage({SetVideoPlayerState:"Play"});
              }
              else if(currentMenu.state == "visible")
              {
                 currentMenu.setState("hidden")
                 document.getElementById('TimeSecond').style.backgroundColor = yellowColor;
                 TimeSecond.value = tempSecondBak.toString().padStart(2, '0')
              }
              else{}
              
            }
        });   
        
    }
    function OnLoadResetMenu()
    {
        dialogYes.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              document.getElementById('dialogYes').style.outline = '3px solid #000000';
              document.getElementById('dialogNo').style.outline = '3px solid #00AEEF';
              document.getElementById('dialogNo').focus()  
              currentMenu = currentMenu.getLeftSibling(); 
                           
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();    
              document.getElementById('dialogYes').style.outline = '3px solid #000000';
              document.getElementById('dialogNo').style.outline = '3px solid #00AEEF';
              document.getElementById('dialogNo').focus()  
              currentMenu = currentMenu.getRightSibling();
              
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('resetMenu').style.visibility = "hidden";
                document.getElementById('dialogYes').style.outline = '3px solid #000000';
                document.getElementById('dialogYes').style.backgroundColor = yellowColor
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem6Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem6Div').focus()
                currentMenu = currentMenu.parent; 
                resetAllSetting()
                                   
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('resetMenu').style.visibility = "hidden";
                document.getElementById('dialogYes').style.outline = '3px solid #000000';
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem6Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem6Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;    
            }
        }); 
        
        dialogNo.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
              e.preventDefault();
              document.getElementById('dialogNo').style.outline = '3px solid #000000';
              document.getElementById('dialogYes').style.outline = '3px solid #00AEEF';
              document.getElementById('dialogYes').focus()  
              currentMenu = currentMenu.getLeftSibling(); 
                           
            } else if (e.key === 'ArrowDown') {
              e.preventDefault();            
              document.getElementById('dialogNo').style.outline = '3px solid #000000';
              document.getElementById('dialogYes').style.outline = '3px solid #00AEEF';
              document.getElementById('dialogYes').focus()  
              currentMenu = currentMenu.getRightSibling();
            }
            else if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('resetMenu').style.visibility = "hidden";
                document.getElementById('dialogNo').style.outline = '3px solid #000000';
                document.getElementById('dialogNo').style.backgroundColor = yellowColor
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem6Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem6Div').focus()
                currentMenu = currentMenu.parent;                                    
            }
            else if (e.key === 'Escape') {
                e.preventDefault();
                document.getElementById('resetMenu').style.visibility = "hidden";
                document.getElementById('dialogNo').style.outline = '3px solid #000000';
                document.getElementById('MenuItemDiv').style.visibility = "visible";
                document.getElementById('MenuItem6Div').style.backgroundColor = yellowColor
                document.getElementById('MenuItem6Div').focus()
                document.getElementById('MenuStatusLabel').textContent = "Menu";
                currentMenu = currentMenu.parent;         
            }
        }); 
    }
    
    function LayMenuToLayVolume()
    {
        document.getElementById('menu').style.backgroundImage = "url('./image/OverlayMain.png')";
        modeBtn.style.backgroundImage = "url('./image/MenuUnselected.png')";
        powerBtn.style.backgroundImage = "url('./image/PowerUnselected.png')";
        document.getElementById('MenuFrameDiv').style.visibility = "hidden";
        document.getElementById('MenuItemDiv').style.visibility = "hidden";
        document.getElementById('VolumeLabel').style.visibility = "visible";
        document.getElementById('MenuStatusLabel').textContent = "Volume";
        currentMenu = currentMenu.parent;
    }
    function resetAllSetting()
    {
        defaultBrightness = 80;
        updateItemValue("defaultBrightness",defaultBrightness);
        defaultVolume = 50;
        updateItemValue("defaultVolume",defaultVolume);
        currentVolume = 50;
        updateItemValue("volume",currentVolume);
        automaticOn = 0
        bsMessagePort.PostBSMessage({automaticOn:"0"});
        document.getElementById('automaticOnCheckBox').checked = false;
        ScheduleJsonData = {
            "Monday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            },
            "Tuesday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            },
            "Wednesday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            },
            "Thursday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            },
            "Friday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            },
            "Saturday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            },
            "Sunday": {
                "OnTime": {
                    "hour": 8,
                    "minute": 0
                },
                "OffTime": {
                    "hour": 21,
                    "minute": 0
                },
                "Active": false
            }
        }
        bsMessagePort.PostBSMessage({ScheduleJson:JSON.stringify(ScheduleJsonData)});
        initScheduleMenu()
    }
    function updateSystemDateTime() {
        const DateYear = document.getElementById('DateYear');
        const DateMonth = document.getElementById('DateMonth');
        const DateDay = document.getElementById('DateDay');
        const TimeHour = document.getElementById('TimeHour');
        const TimeMinute = document.getElementById('TimeMinute');
        const TimeSecond = document.getElementById('TimeSecond');
    
        let  dateTimeStr = `${DateYear.value}-${DateMonth.value}-${DateDay.value}T${TimeHour.value}:${TimeMinute.value}:${TimeSecond.value}.100`;
        // document.getElementById('test').innerHTML = dateTimeStr
        bsMessagePort.PostBSMessage({setSystemDateTime:dateTimeStr}); 
    }
    
});

    

          
        
        
        
  
        
            
                
        
        
    
         
